/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData;
import com.konfigthis.client.model.AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengersInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Mandatory if TenderType is Credit or not set. This will be ignored if TenderType is Cash or ACH.
 */
@ApiModel(description = "Mandatory if TenderType is Credit or not set. This will be ignored if TenderType is Cash or ACH.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AuthenticationAcquireClientAuthorizationRequestRiskData {
  public static final String SERIALIZED_NAME_SESSION_ID = "SessionId";
  @SerializedName(SERIALIZED_NAME_SESSION_ID)
  private String sessionId;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_GENDER = "Gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "DateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private String dateOfBirth;

  public static final String SERIALIZED_NAME_BILLING_PHONE_NUMBER = "BillingPhoneNumber";
  @SerializedName(SERIALIZED_NAME_BILLING_PHONE_NUMBER)
  private String billingPhoneNumber;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS1 = "BillingAddress1";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS1)
  private String billingAddress1;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS2 = "BillingAddress2";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS2)
  private String billingAddress2;

  public static final String SERIALIZED_NAME_BILLING_CITY = "BillingCity";
  @SerializedName(SERIALIZED_NAME_BILLING_CITY)
  private String billingCity;

  public static final String SERIALIZED_NAME_BILLING_STATE = "BillingState";
  @SerializedName(SERIALIZED_NAME_BILLING_STATE)
  private String billingState;

  public static final String SERIALIZED_NAME_BILLING_POSTAL_CODE = "BillingPostalCode";
  @SerializedName(SERIALIZED_NAME_BILLING_POSTAL_CODE)
  private String billingPostalCode;

  public static final String SERIALIZED_NAME_BILLING_COUNTRY_CODE = "BillingCountryCode";
  @SerializedName(SERIALIZED_NAME_BILLING_COUNTRY_CODE)
  private String billingCountryCode;

  public static final String SERIALIZED_NAME_EMAIL = "Email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "ProductType";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private String productType;

  public static final String SERIALIZED_NAME_PRODUCT_DESCRIPTION = "ProductDescription";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DESCRIPTION)
  private String productDescription;

  public static final String SERIALIZED_NAME_PRODUCT_ITEM = "ProductItem";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ITEM)
  private String productItem;

  public static final String SERIALIZED_NAME_PRODUCT_QUANTITY = "ProductQuantity";
  @SerializedName(SERIALIZED_NAME_PRODUCT_QUANTITY)
  private Integer productQuantity;

  public static final String SERIALIZED_NAME_PRODUCT_PRICE = "ProductPrice";
  @SerializedName(SERIALIZED_NAME_PRODUCT_PRICE)
  private Integer productPrice;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "OrderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_SELLER_ID = "SellerId";
  @SerializedName(SERIALIZED_NAME_SELLER_ID)
  private String sellerId;

  public static final String SERIALIZED_NAME_FLIGHT_DATA = "FlightData";
  @SerializedName(SERIALIZED_NAME_FLIGHT_DATA)
  private AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData flightData;

  public static final String SERIALIZED_NAME_FLIGHT_PASSENGERS = "FlightPassengers";
  @SerializedName(SERIALIZED_NAME_FLIGHT_PASSENGERS)
  private List<AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengersInner> flightPassengers = null;

  public static final String SERIALIZED_NAME_CUSTOM_PARAMETERS = "CustomParameters";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PARAMETERS)
  private Object customParameters;

  public AuthenticationAcquireClientAuthorizationRequestRiskData() {
  }

  public AuthenticationAcquireClientAuthorizationRequestRiskData sessionId(String sessionId) {
    
    
    
    
    this.sessionId = sessionId;
    return this;
  }

   /**
   * If you are using Kount&#39;s Device Data Collector, this would be the SessionId from that particular session. Do not include this property if not using Kount&#39;s Device Data Collector.
   * @return sessionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If you are using Kount's Device Data Collector, this would be the SessionId from that particular session. Do not include this property if not using Kount's Device Data Collector.")

  public String getSessionId() {
    return sessionId;
  }


  public void setSessionId(String sessionId) {
    
    
    
    this.sessionId = sessionId;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * This is the name of the individual making the purchase i.e. cardholder who may or may not also be the customer. This value is submitted in multiple integration points for different purposes. This value/object is specific to fraud mitigation. Note: for airline ticket purchases this value may or may not be the same as the passenger. Max Length &#x3D; 64
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the name of the individual making the purchase i.e. cardholder who may or may not also be the customer. This value is submitted in multiple integration points for different purposes. This value/object is specific to fraud mitigation. Note: for airline ticket purchases this value may or may not be the same as the passenger. Max Length = 64")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Cardholder gender. \&quot;M\&quot; or \&quot;F\&quot;.
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cardholder gender. \"M\" or \"F\".")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData dateOfBirth(String dateOfBirth) {
    
    
    
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Cardholder date of birth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cardholder date of birth")

  public String getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(String dateOfBirth) {
    
    
    
    this.dateOfBirth = dateOfBirth;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData billingPhoneNumber(String billingPhoneNumber) {
    
    
    
    
    this.billingPhoneNumber = billingPhoneNumber;
    return this;
  }

   /**
   * Phone number associated with cardholder making purchase. Cardholder billing phone number. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.  Phone number up to 15 characters. Numbers and plus sign (+) allowed only.
   * @return billingPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Phone number associated with cardholder making purchase. Cardholder billing phone number. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.  Phone number up to 15 characters. Numbers and plus sign (+) allowed only.")

  public String getBillingPhoneNumber() {
    return billingPhoneNumber;
  }


  public void setBillingPhoneNumber(String billingPhoneNumber) {
    
    
    
    this.billingPhoneNumber = billingPhoneNumber;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData billingAddress1(String billingAddress1) {
    
    
    
    
    this.billingAddress1 = billingAddress1;
    return this;
  }

   /**
   * Cardholder billing address 1. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.
   * @return billingAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cardholder billing address 1. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.")

  public String getBillingAddress1() {
    return billingAddress1;
  }


  public void setBillingAddress1(String billingAddress1) {
    
    
    
    this.billingAddress1 = billingAddress1;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData billingAddress2(String billingAddress2) {
    
    
    
    
    this.billingAddress2 = billingAddress2;
    return this;
  }

   /**
   * Cardholder billing address 2. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.
   * @return billingAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cardholder billing address 2. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.")

  public String getBillingAddress2() {
    return billingAddress2;
  }


  public void setBillingAddress2(String billingAddress2) {
    
    
    
    this.billingAddress2 = billingAddress2;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData billingCity(String billingCity) {
    
    
    
    
    this.billingCity = billingCity;
    return this;
  }

   /**
   * Cardholder billing city. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.
   * @return billingCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cardholder billing city. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.")

  public String getBillingCity() {
    return billingCity;
  }


  public void setBillingCity(String billingCity) {
    
    
    
    this.billingCity = billingCity;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData billingState(String billingState) {
    
    
    
    
    this.billingState = billingState;
    return this;
  }

   /**
   * Cardholder billing state. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.
   * @return billingState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cardholder billing state. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.")

  public String getBillingState() {
    return billingState;
  }


  public void setBillingState(String billingState) {
    
    
    
    this.billingState = billingState;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData billingPostalCode(String billingPostalCode) {
    
    
    
    
    this.billingPostalCode = billingPostalCode;
    return this;
  }

   /**
   * Cardholder billing postal code. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option. Max Length &#x3D; 15. Alphanumerics and \&quot;-\&quot; allowed.
   * @return billingPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cardholder billing postal code. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option. Max Length = 15. Alphanumerics and \"-\" allowed.")

  public String getBillingPostalCode() {
    return billingPostalCode;
  }


  public void setBillingPostalCode(String billingPostalCode) {
    
    
    
    this.billingPostalCode = billingPostalCode;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData billingCountryCode(String billingCountryCode) {
    
    
    
    
    this.billingCountryCode = billingCountryCode;
    return this;
  }

   /**
   * Cardholder billing country code. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.  Length &#x3D; 2.
   * @return billingCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cardholder billing country code. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.  Length = 2.")

  public String getBillingCountryCode() {
    return billingCountryCode;
  }


  public void setBillingCountryCode(String billingCountryCode) {
    
    
    
    this.billingCountryCode = billingCountryCode;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Cardholder&#39;s valid email address. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cardholder's valid email address. This value is used in risk analysis and decisioning. More specifically, can be used for rule creation or additional identity validation using the White Pages Pro add on option.")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData productType(String productType) {
    
    
    
    
    this.productType = productType;
    return this;
  }

   /**
   * Generalized description of the item added passed as plain text. This could be flight, tour, hotel, etc. (This is part of shopping cart information in Kount Console). Each transaction submitted for risk analysis and decisioning must be submitted with one shopping cart item.
   * @return productType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Generalized description of the item added passed as plain text. This could be flight, tour, hotel, etc. (This is part of shopping cart information in Kount Console). Each transaction submitted for risk analysis and decisioning must be submitted with one shopping cart item.")

  public String getProductType() {
    return productType;
  }


  public void setProductType(String productType) {
    
    
    
    this.productType = productType;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData productDescription(String productDescription) {
    
    
    
    
    this.productDescription = productDescription;
    return this;
  }

   /**
   * Attribute for a specific description of the item being purchased i.e. airline ticket. This information is general shopping cart information that describes the type of item being purchased. ConnexPay suggests clients submitted a high level description such as Flight, Hotel, Car Rental, etc... and leverage custom parameters to submit more detailed information that can be used for rule creation and transaction decisioning.
   * @return productDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Attribute for a specific description of the item being purchased i.e. airline ticket. This information is general shopping cart information that describes the type of item being purchased. ConnexPay suggests clients submitted a high level description such as Flight, Hotel, Car Rental, etc... and leverage custom parameters to submit more detailed information that can be used for rule creation and transaction decisioning.")

  public String getProductDescription() {
    return productDescription;
  }


  public void setProductDescription(String productDescription) {
    
    
    
    this.productDescription = productDescription;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData productItem(String productItem) {
    
    
    
    
    this.productItem = productItem;
    return this;
  }

   /**
   * Typically the SKU for an item passed as plain text. This information is general shopping cart information to provide secondary detail to the ProductDesc above. ConnexPay suggests clients submit a high level description such as One Way, Round Trip, Seven Nights, etc...and several customer parameters to submit more detailed information that can be used for rule creation and transaction decisioning.  Field is required by Kount therefore some value must be submitted. Alphanumeric.
   * @return productItem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Typically the SKU for an item passed as plain text. This information is general shopping cart information to provide secondary detail to the ProductDesc above. ConnexPay suggests clients submit a high level description such as One Way, Round Trip, Seven Nights, etc...and several customer parameters to submit more detailed information that can be used for rule creation and transaction decisioning.  Field is required by Kount therefore some value must be submitted. Alphanumeric.")

  public String getProductItem() {
    return productItem;
  }


  public void setProductItem(String productItem) {
    
    
    
    this.productItem = productItem;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData productQuantity(Integer productQuantity) {
    
    
    
    
    this.productQuantity = productQuantity;
    return this;
  }

   /**
   * Quantity of the item being purchased in the shopping cart. This is just a general quantity field.
   * @return productQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quantity of the item being purchased in the shopping cart. This is just a general quantity field.")

  public Integer getProductQuantity() {
    return productQuantity;
  }


  public void setProductQuantity(Integer productQuantity) {
    
    
    
    this.productQuantity = productQuantity;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData productPrice(Integer productPrice) {
    
    
    
    
    this.productPrice = productPrice;
    return this;
  }

   /**
   * Price per unit item, displayed in lowest currency factor - expressed in cents. Example: 42400 (which is $424.00).
   * @return productPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Price per unit item, displayed in lowest currency factor - expressed in cents. Example: 42400 (which is $424.00).")

  public Integer getProductPrice() {
    return productPrice;
  }


  public void setProductPrice(Integer productPrice) {
    
    
    
    this.productPrice = productPrice;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData orderNumber(String orderNumber) {
    
    
    
    
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Transaction ID within client environment associated with the order. The value is searchable and reportable in the Kount portal. This value may be sent in multiple instances of the integration for multiple purposes. Customers in the travel space often send the Record Locator/PNR in this field.  The maximum length is 32 alpha-numeric characters and allows dashes ( - ).
   * @return orderNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Transaction ID within client environment associated with the order. The value is searchable and reportable in the Kount portal. This value may be sent in multiple instances of the integration for multiple purposes. Customers in the travel space often send the Record Locator/PNR in this field.  The maximum length is 32 alpha-numeric characters and allows dashes ( - ).")

  public String getOrderNumber() {
    return orderNumber;
  }


  public void setOrderNumber(String orderNumber) {
    
    
    
    this.orderNumber = orderNumber;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData sellerId(String sellerId) {
    
    
    
    
    this.sellerId = sellerId;
    return this;
  }

   /**
   * Transaction ID within client environment associated with the customer. This value acts as a secondary identifier in conjunction with OrderNumber. The value is searchable and reportable in the Kount portal. This value may be sent in multiple times within the integration for multiple purposes.  The maximum length is 32 characters.
   * @return sellerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Transaction ID within client environment associated with the customer. This value acts as a secondary identifier in conjunction with OrderNumber. The value is searchable and reportable in the Kount portal. This value may be sent in multiple times within the integration for multiple purposes.  The maximum length is 32 characters.")

  public String getSellerId() {
    return sellerId;
  }


  public void setSellerId(String sellerId) {
    
    
    
    this.sellerId = sellerId;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData flightData(AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData flightData) {
    
    
    
    
    this.flightData = flightData;
    return this;
  }

   /**
   * Get flightData
   * @return flightData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData getFlightData() {
    return flightData;
  }


  public void setFlightData(AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData flightData) {
    
    
    
    this.flightData = flightData;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData flightPassengers(List<AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengersInner> flightPassengers) {
    
    
    
    
    this.flightPassengers = flightPassengers;
    return this;
  }

  public AuthenticationAcquireClientAuthorizationRequestRiskData addFlightPassengersItem(AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengersInner flightPassengersItem) {
    if (this.flightPassengers == null) {
      this.flightPassengers = new ArrayList<>();
    }
    this.flightPassengers.add(flightPassengersItem);
    return this;
  }

   /**
   * Get flightPassengers
   * @return flightPassengers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengersInner> getFlightPassengers() {
    return flightPassengers;
  }


  public void setFlightPassengers(List<AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengersInner> flightPassengers) {
    
    
    
    this.flightPassengers = flightPassengers;
  }


  public AuthenticationAcquireClientAuthorizationRequestRiskData customParameters(Object customParameters) {
    
    
    
    
    this.customParameters = customParameters;
    return this;
  }

   /**
   * Custom Parameters. Array.
   * @return customParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom Parameters. Array.")

  public Object getCustomParameters() {
    return customParameters;
  }


  public void setCustomParameters(Object customParameters) {
    
    
    
    this.customParameters = customParameters;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AuthenticationAcquireClientAuthorizationRequestRiskData instance itself
   */
  public AuthenticationAcquireClientAuthorizationRequestRiskData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationAcquireClientAuthorizationRequestRiskData authenticationAcquireClientAuthorizationRequestRiskData = (AuthenticationAcquireClientAuthorizationRequestRiskData) o;
    return Objects.equals(this.sessionId, authenticationAcquireClientAuthorizationRequestRiskData.sessionId) &&
        Objects.equals(this.name, authenticationAcquireClientAuthorizationRequestRiskData.name) &&
        Objects.equals(this.gender, authenticationAcquireClientAuthorizationRequestRiskData.gender) &&
        Objects.equals(this.dateOfBirth, authenticationAcquireClientAuthorizationRequestRiskData.dateOfBirth) &&
        Objects.equals(this.billingPhoneNumber, authenticationAcquireClientAuthorizationRequestRiskData.billingPhoneNumber) &&
        Objects.equals(this.billingAddress1, authenticationAcquireClientAuthorizationRequestRiskData.billingAddress1) &&
        Objects.equals(this.billingAddress2, authenticationAcquireClientAuthorizationRequestRiskData.billingAddress2) &&
        Objects.equals(this.billingCity, authenticationAcquireClientAuthorizationRequestRiskData.billingCity) &&
        Objects.equals(this.billingState, authenticationAcquireClientAuthorizationRequestRiskData.billingState) &&
        Objects.equals(this.billingPostalCode, authenticationAcquireClientAuthorizationRequestRiskData.billingPostalCode) &&
        Objects.equals(this.billingCountryCode, authenticationAcquireClientAuthorizationRequestRiskData.billingCountryCode) &&
        Objects.equals(this.email, authenticationAcquireClientAuthorizationRequestRiskData.email) &&
        Objects.equals(this.productType, authenticationAcquireClientAuthorizationRequestRiskData.productType) &&
        Objects.equals(this.productDescription, authenticationAcquireClientAuthorizationRequestRiskData.productDescription) &&
        Objects.equals(this.productItem, authenticationAcquireClientAuthorizationRequestRiskData.productItem) &&
        Objects.equals(this.productQuantity, authenticationAcquireClientAuthorizationRequestRiskData.productQuantity) &&
        Objects.equals(this.productPrice, authenticationAcquireClientAuthorizationRequestRiskData.productPrice) &&
        Objects.equals(this.orderNumber, authenticationAcquireClientAuthorizationRequestRiskData.orderNumber) &&
        Objects.equals(this.sellerId, authenticationAcquireClientAuthorizationRequestRiskData.sellerId) &&
        Objects.equals(this.flightData, authenticationAcquireClientAuthorizationRequestRiskData.flightData) &&
        Objects.equals(this.flightPassengers, authenticationAcquireClientAuthorizationRequestRiskData.flightPassengers) &&
        Objects.equals(this.customParameters, authenticationAcquireClientAuthorizationRequestRiskData.customParameters)&&
        Objects.equals(this.additionalProperties, authenticationAcquireClientAuthorizationRequestRiskData.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionId, name, gender, dateOfBirth, billingPhoneNumber, billingAddress1, billingAddress2, billingCity, billingState, billingPostalCode, billingCountryCode, email, productType, productDescription, productItem, productQuantity, productPrice, orderNumber, sellerId, flightData, flightPassengers, customParameters, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationAcquireClientAuthorizationRequestRiskData {\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    billingPhoneNumber: ").append(toIndentedString(billingPhoneNumber)).append("\n");
    sb.append("    billingAddress1: ").append(toIndentedString(billingAddress1)).append("\n");
    sb.append("    billingAddress2: ").append(toIndentedString(billingAddress2)).append("\n");
    sb.append("    billingCity: ").append(toIndentedString(billingCity)).append("\n");
    sb.append("    billingState: ").append(toIndentedString(billingState)).append("\n");
    sb.append("    billingPostalCode: ").append(toIndentedString(billingPostalCode)).append("\n");
    sb.append("    billingCountryCode: ").append(toIndentedString(billingCountryCode)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    productDescription: ").append(toIndentedString(productDescription)).append("\n");
    sb.append("    productItem: ").append(toIndentedString(productItem)).append("\n");
    sb.append("    productQuantity: ").append(toIndentedString(productQuantity)).append("\n");
    sb.append("    productPrice: ").append(toIndentedString(productPrice)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    sellerId: ").append(toIndentedString(sellerId)).append("\n");
    sb.append("    flightData: ").append(toIndentedString(flightData)).append("\n");
    sb.append("    flightPassengers: ").append(toIndentedString(flightPassengers)).append("\n");
    sb.append("    customParameters: ").append(toIndentedString(customParameters)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SessionId");
    openapiFields.add("Name");
    openapiFields.add("Gender");
    openapiFields.add("DateOfBirth");
    openapiFields.add("BillingPhoneNumber");
    openapiFields.add("BillingAddress1");
    openapiFields.add("BillingAddress2");
    openapiFields.add("BillingCity");
    openapiFields.add("BillingState");
    openapiFields.add("BillingPostalCode");
    openapiFields.add("BillingCountryCode");
    openapiFields.add("Email");
    openapiFields.add("ProductType");
    openapiFields.add("ProductDescription");
    openapiFields.add("ProductItem");
    openapiFields.add("ProductQuantity");
    openapiFields.add("ProductPrice");
    openapiFields.add("OrderNumber");
    openapiFields.add("SellerId");
    openapiFields.add("FlightData");
    openapiFields.add("FlightPassengers");
    openapiFields.add("CustomParameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AuthenticationAcquireClientAuthorizationRequestRiskData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AuthenticationAcquireClientAuthorizationRequestRiskData.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AuthenticationAcquireClientAuthorizationRequestRiskData is not found in the empty JSON string", AuthenticationAcquireClientAuthorizationRequestRiskData.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("SessionId") != null && !jsonObj.get("SessionId").isJsonNull()) && !jsonObj.get("SessionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SessionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SessionId").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Gender") != null && !jsonObj.get("Gender").isJsonNull()) && !jsonObj.get("Gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Gender").toString()));
      }
      if ((jsonObj.get("DateOfBirth") != null && !jsonObj.get("DateOfBirth").isJsonNull()) && !jsonObj.get("DateOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DateOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DateOfBirth").toString()));
      }
      if ((jsonObj.get("BillingPhoneNumber") != null && !jsonObj.get("BillingPhoneNumber").isJsonNull()) && !jsonObj.get("BillingPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BillingPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BillingPhoneNumber").toString()));
      }
      if ((jsonObj.get("BillingAddress1") != null && !jsonObj.get("BillingAddress1").isJsonNull()) && !jsonObj.get("BillingAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BillingAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BillingAddress1").toString()));
      }
      if ((jsonObj.get("BillingAddress2") != null && !jsonObj.get("BillingAddress2").isJsonNull()) && !jsonObj.get("BillingAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BillingAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BillingAddress2").toString()));
      }
      if ((jsonObj.get("BillingCity") != null && !jsonObj.get("BillingCity").isJsonNull()) && !jsonObj.get("BillingCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BillingCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BillingCity").toString()));
      }
      if ((jsonObj.get("BillingState") != null && !jsonObj.get("BillingState").isJsonNull()) && !jsonObj.get("BillingState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BillingState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BillingState").toString()));
      }
      if ((jsonObj.get("BillingPostalCode") != null && !jsonObj.get("BillingPostalCode").isJsonNull()) && !jsonObj.get("BillingPostalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BillingPostalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BillingPostalCode").toString()));
      }
      if ((jsonObj.get("BillingCountryCode") != null && !jsonObj.get("BillingCountryCode").isJsonNull()) && !jsonObj.get("BillingCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BillingCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BillingCountryCode").toString()));
      }
      if ((jsonObj.get("Email") != null && !jsonObj.get("Email").isJsonNull()) && !jsonObj.get("Email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Email").toString()));
      }
      if ((jsonObj.get("ProductType") != null && !jsonObj.get("ProductType").isJsonNull()) && !jsonObj.get("ProductType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProductType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProductType").toString()));
      }
      if ((jsonObj.get("ProductDescription") != null && !jsonObj.get("ProductDescription").isJsonNull()) && !jsonObj.get("ProductDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProductDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProductDescription").toString()));
      }
      if ((jsonObj.get("ProductItem") != null && !jsonObj.get("ProductItem").isJsonNull()) && !jsonObj.get("ProductItem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProductItem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProductItem").toString()));
      }
      if ((jsonObj.get("OrderNumber") != null && !jsonObj.get("OrderNumber").isJsonNull()) && !jsonObj.get("OrderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OrderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OrderNumber").toString()));
      }
      if ((jsonObj.get("SellerId") != null && !jsonObj.get("SellerId").isJsonNull()) && !jsonObj.get("SellerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SellerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SellerId").toString()));
      }
      // validate the optional field `FlightData`
      if (jsonObj.get("FlightData") != null && !jsonObj.get("FlightData").isJsonNull()) {
        AuthenticationAcquireClientAuthorizationRequestRiskDataFlightData.validateJsonObject(jsonObj.getAsJsonObject("FlightData"));
      }
      if (jsonObj.get("FlightPassengers") != null && !jsonObj.get("FlightPassengers").isJsonNull()) {
        JsonArray jsonArrayflightPassengers = jsonObj.getAsJsonArray("FlightPassengers");
        if (jsonArrayflightPassengers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("FlightPassengers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `FlightPassengers` to be an array in the JSON string but got `%s`", jsonObj.get("FlightPassengers").toString()));
          }

          // validate the optional field `FlightPassengers` (array)
          for (int i = 0; i < jsonArrayflightPassengers.size(); i++) {
            AuthenticationAcquireClientAuthorizationRequestRiskDataFlightPassengersInner.validateJsonObject(jsonArrayflightPassengers.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AuthenticationAcquireClientAuthorizationRequestRiskData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AuthenticationAcquireClientAuthorizationRequestRiskData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AuthenticationAcquireClientAuthorizationRequestRiskData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AuthenticationAcquireClientAuthorizationRequestRiskData.class));

       return (TypeAdapter<T>) new TypeAdapter<AuthenticationAcquireClientAuthorizationRequestRiskData>() {
           @Override
           public void write(JsonWriter out, AuthenticationAcquireClientAuthorizationRequestRiskData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AuthenticationAcquireClientAuthorizationRequestRiskData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AuthenticationAcquireClientAuthorizationRequestRiskData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AuthenticationAcquireClientAuthorizationRequestRiskData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AuthenticationAcquireClientAuthorizationRequestRiskData
  * @throws IOException if the JSON string is invalid with respect to AuthenticationAcquireClientAuthorizationRequestRiskData
  */
  public static AuthenticationAcquireClientAuthorizationRequestRiskData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AuthenticationAcquireClientAuthorizationRequestRiskData.class);
  }

 /**
  * Convert an instance of AuthenticationAcquireClientAuthorizationRequestRiskData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

