/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.SaleCreateTransactionResponseCard;
import com.konfigthis.client.model.SaleCreateTransactionResponseConnexPayTransaction;
import com.konfigthis.client.model.SaleCreateTransactionResponseRiskResponse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SaleCreateTransactionResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SaleCreateTransactionResponse {
  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_BATCH_STATUS = "batchStatus";
  @SerializedName(SERIALIZED_NAME_BATCH_STATUS)
  private String batchStatus;

  public static final String SERIALIZED_NAME_TIME_STAMP = "timeStamp";
  @SerializedName(SERIALIZED_NAME_TIME_STAMP)
  private String timeStamp;

  public static final String SERIALIZED_NAME_DEVICE_GUID = "deviceGuid";
  @SerializedName(SERIALIZED_NAME_DEVICE_GUID)
  private String deviceGuid;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Integer amount = 0;

  public static final String SERIALIZED_NAME_ACTIVATED = "activated";
  @SerializedName(SERIALIZED_NAME_ACTIVATED)
  private Boolean activated = true;

  public static final String SERIALIZED_NAME_TENDER_TYPE = "tenderType";
  @SerializedName(SERIALIZED_NAME_TENDER_TYPE)
  private String tenderType;

  public static final String SERIALIZED_NAME_EFFECTIVE_AMOUNT = "effectiveAmount";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_AMOUNT)
  private Integer effectiveAmount = 0;

  public static final String SERIALIZED_NAME_RISK_RESPONSE = "riskResponse";
  @SerializedName(SERIALIZED_NAME_RISK_RESPONSE)
  private SaleCreateTransactionResponseRiskResponse riskResponse;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "orderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_CARD_DATA_SOURCE = "cardDataSource";
  @SerializedName(SERIALIZED_NAME_CARD_DATA_SOURCE)
  private String cardDataSource;

  public static final String SERIALIZED_NAME_CUSTOMER_I_D = "customerID";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_I_D)
  private String customerID;

  public static final String SERIALIZED_NAME_BATCH_GUID = "batchGuid";
  @SerializedName(SERIALIZED_NAME_BATCH_GUID)
  private String batchGuid;

  public static final String SERIALIZED_NAME_CONNEX_PAY_TRANSACTION = "connexPayTransaction";
  @SerializedName(SERIALIZED_NAME_CONNEX_PAY_TRANSACTION)
  private SaleCreateTransactionResponseConnexPayTransaction connexPayTransaction;

  public static final String SERIALIZED_NAME_ASSOCIATION_ID = "associationId";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_ID)
  private String associationId;

  public static final String SERIALIZED_NAME_PROCESSOR_STATUS_CODE = "processorStatusCode";
  @SerializedName(SERIALIZED_NAME_PROCESSOR_STATUS_CODE)
  private String processorStatusCode;

  public static final String SERIALIZED_NAME_PROCESSOR_RESPONSE_MESSAGE = "processorResponseMessage";
  @SerializedName(SERIALIZED_NAME_PROCESSOR_RESPONSE_MESSAGE)
  private String processorResponseMessage;

  public static final String SERIALIZED_NAME_WAS_PROCESSED = "wasProcessed";
  @SerializedName(SERIALIZED_NAME_WAS_PROCESSED)
  private Boolean wasProcessed = true;

  public static final String SERIALIZED_NAME_AUTH_CODE = "authCode";
  @SerializedName(SERIALIZED_NAME_AUTH_CODE)
  private String authCode;

  public static final String SERIALIZED_NAME_REF_NUMBER = "refNumber";
  @SerializedName(SERIALIZED_NAME_REF_NUMBER)
  private String refNumber;

  public static final String SERIALIZED_NAME_CUSTOMER_RECEIPT = "customerReceipt";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_RECEIPT)
  private String customerReceipt;

  public static final String SERIALIZED_NAME_STATEMENT_DESCRIPTION = "statementDescription";
  @SerializedName(SERIALIZED_NAME_STATEMENT_DESCRIPTION)
  private String statementDescription;

  public static final String SERIALIZED_NAME_GENERATED_BY = "generatedBy";
  @SerializedName(SERIALIZED_NAME_GENERATED_BY)
  private String generatedBy;

  public static final String SERIALIZED_NAME_CARD = "Card";
  @SerializedName(SERIALIZED_NAME_CARD)
  private SaleCreateTransactionResponseCard card;

  public static final String SERIALIZED_NAME_ADDRESS_VERIFICATION_RESULT = "addressVerificationResult";
  @SerializedName(SERIALIZED_NAME_ADDRESS_VERIFICATION_RESULT)
  private String addressVerificationResult;

  public static final String SERIALIZED_NAME_CVV_VERIFICATION_CODE = "cvvVerificationCode";
  @SerializedName(SERIALIZED_NAME_CVV_VERIFICATION_CODE)
  private String cvvVerificationCode;

  public static final String SERIALIZED_NAME_CVV_VERIFICATION_RESULT = "cvvVerificationResult";
  @SerializedName(SERIALIZED_NAME_CVV_VERIFICATION_RESULT)
  private String cvvVerificationResult;

  public static final String SERIALIZED_NAME_CAVV_RESPONSE_CODE = "cavvResponseCode";
  @SerializedName(SERIALIZED_NAME_CAVV_RESPONSE_CODE)
  private String cavvResponseCode;

  public static final String SERIALIZED_NAME_WALLET_PROVIDER = "walletProvider";
  @SerializedName(SERIALIZED_NAME_WALLET_PROVIDER)
  private Integer walletProvider = 0;

  public static final String SERIALIZED_NAME_IS_FROM_ISSUE_LITE = "isFromIssueLite";
  @SerializedName(SERIALIZED_NAME_IS_FROM_ISSUE_LITE)
  private Boolean isFromIssueLite = true;

  public static final String SERIALIZED_NAME_LABEL_IDS = "labelIds";
  @SerializedName(SERIALIZED_NAME_LABEL_IDS)
  private List<Integer> labelIds = null;

  public static final String SERIALIZED_NAME_REMAINING_AMOUNT = "remainingAmount";
  @SerializedName(SERIALIZED_NAME_REMAINING_AMOUNT)
  private Integer remainingAmount = 0;

  public SaleCreateTransactionResponse() {
  }

  public SaleCreateTransactionResponse guid(String guid) {
    
    
    
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2d78c80e-59c3-44ae-a770-c70dfa550768", value = "")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    
    
    
    this.guid = guid;
  }


  public SaleCreateTransactionResponse status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Transaction - Approved", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public SaleCreateTransactionResponse type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3D Secure", value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public SaleCreateTransactionResponse batchStatus(String batchStatus) {
    
    
    
    
    this.batchStatus = batchStatus;
    return this;
  }

   /**
   * Get batchStatus
   * @return batchStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Batch - Open", value = "")

  public String getBatchStatus() {
    return batchStatus;
  }


  public void setBatchStatus(String batchStatus) {
    
    
    
    this.batchStatus = batchStatus;
  }


  public SaleCreateTransactionResponse timeStamp(String timeStamp) {
    
    
    
    
    this.timeStamp = timeStamp;
    return this;
  }

   /**
   * Get timeStamp
   * @return timeStamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-11-29T06:47:52.53-05:00", value = "")

  public String getTimeStamp() {
    return timeStamp;
  }


  public void setTimeStamp(String timeStamp) {
    
    
    
    this.timeStamp = timeStamp;
  }


  public SaleCreateTransactionResponse deviceGuid(String deviceGuid) {
    
    
    
    
    this.deviceGuid = deviceGuid;
    return this;
  }

   /**
   * Get deviceGuid
   * @return deviceGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "e639a1dc-5cc4-43de-ab74-d5bea6c6b107", value = "")

  public String getDeviceGuid() {
    return deviceGuid;
  }


  public void setDeviceGuid(String deviceGuid) {
    
    
    
    this.deviceGuid = deviceGuid;
  }


  public SaleCreateTransactionResponse amount(Integer amount) {
    
    
    
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getAmount() {
    return amount;
  }


  public void setAmount(Integer amount) {
    
    
    
    this.amount = amount;
  }


  public SaleCreateTransactionResponse activated(Boolean activated) {
    
    
    
    
    this.activated = activated;
    return this;
  }

   /**
   * Get activated
   * @return activated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getActivated() {
    return activated;
  }


  public void setActivated(Boolean activated) {
    
    
    
    this.activated = activated;
  }


  public SaleCreateTransactionResponse tenderType(String tenderType) {
    
    
    
    
    this.tenderType = tenderType;
    return this;
  }

   /**
   * Get tenderType
   * @return tenderType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Credit", value = "")

  public String getTenderType() {
    return tenderType;
  }


  public void setTenderType(String tenderType) {
    
    
    
    this.tenderType = tenderType;
  }


  public SaleCreateTransactionResponse effectiveAmount(Integer effectiveAmount) {
    
    
    
    
    this.effectiveAmount = effectiveAmount;
    return this;
  }

   /**
   * Get effectiveAmount
   * @return effectiveAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getEffectiveAmount() {
    return effectiveAmount;
  }


  public void setEffectiveAmount(Integer effectiveAmount) {
    
    
    
    this.effectiveAmount = effectiveAmount;
  }


  public SaleCreateTransactionResponse riskResponse(SaleCreateTransactionResponseRiskResponse riskResponse) {
    
    
    
    
    this.riskResponse = riskResponse;
    return this;
  }

   /**
   * Get riskResponse
   * @return riskResponse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SaleCreateTransactionResponseRiskResponse getRiskResponse() {
    return riskResponse;
  }


  public void setRiskResponse(SaleCreateTransactionResponseRiskResponse riskResponse) {
    
    
    
    this.riskResponse = riskResponse;
  }


  public SaleCreateTransactionResponse orderNumber(String orderNumber) {
    
    
    
    
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Get orderNumber
   * @return orderNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "")

  public String getOrderNumber() {
    return orderNumber;
  }


  public void setOrderNumber(String orderNumber) {
    
    
    
    this.orderNumber = orderNumber;
  }


  public SaleCreateTransactionResponse cardDataSource(String cardDataSource) {
    
    
    
    
    this.cardDataSource = cardDataSource;
    return this;
  }

   /**
   * Get cardDataSource
   * @return cardDataSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "INTERNET", value = "")

  public String getCardDataSource() {
    return cardDataSource;
  }


  public void setCardDataSource(String cardDataSource) {
    
    
    
    this.cardDataSource = cardDataSource;
  }


  public SaleCreateTransactionResponse customerID(String customerID) {
    
    
    
    
    this.customerID = customerID;
    return this;
  }

   /**
   * Get customerID
   * @return customerID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "")

  public String getCustomerID() {
    return customerID;
  }


  public void setCustomerID(String customerID) {
    
    
    
    this.customerID = customerID;
  }


  public SaleCreateTransactionResponse batchGuid(String batchGuid) {
    
    
    
    
    this.batchGuid = batchGuid;
    return this;
  }

   /**
   * Get batchGuid
   * @return batchGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "c4513dc8-1f49-47c2-b384-6b0897c3734e", value = "")

  public String getBatchGuid() {
    return batchGuid;
  }


  public void setBatchGuid(String batchGuid) {
    
    
    
    this.batchGuid = batchGuid;
  }


  public SaleCreateTransactionResponse connexPayTransaction(SaleCreateTransactionResponseConnexPayTransaction connexPayTransaction) {
    
    
    
    
    this.connexPayTransaction = connexPayTransaction;
    return this;
  }

   /**
   * Get connexPayTransaction
   * @return connexPayTransaction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SaleCreateTransactionResponseConnexPayTransaction getConnexPayTransaction() {
    return connexPayTransaction;
  }


  public void setConnexPayTransaction(SaleCreateTransactionResponseConnexPayTransaction connexPayTransaction) {
    
    
    
    this.connexPayTransaction = connexPayTransaction;
  }


  public SaleCreateTransactionResponse associationId(String associationId) {
    
    
    
    
    this.associationId = associationId;
    return this;
  }

   /**
   * Get associationId
   * @return associationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "")

  public String getAssociationId() {
    return associationId;
  }


  public void setAssociationId(String associationId) {
    
    
    
    this.associationId = associationId;
  }


  public SaleCreateTransactionResponse processorStatusCode(String processorStatusCode) {
    
    
    
    
    this.processorStatusCode = processorStatusCode;
    return this;
  }

   /**
   * Get processorStatusCode
   * @return processorStatusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public String getProcessorStatusCode() {
    return processorStatusCode;
  }


  public void setProcessorStatusCode(String processorStatusCode) {
    
    
    
    this.processorStatusCode = processorStatusCode;
  }


  public SaleCreateTransactionResponse processorResponseMessage(String processorResponseMessage) {
    
    
    
    
    this.processorResponseMessage = processorResponseMessage;
    return this;
  }

   /**
   * Get processorResponseMessage
   * @return processorResponseMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Transaction has been executed successfully.", value = "")

  public String getProcessorResponseMessage() {
    return processorResponseMessage;
  }


  public void setProcessorResponseMessage(String processorResponseMessage) {
    
    
    
    this.processorResponseMessage = processorResponseMessage;
  }


  public SaleCreateTransactionResponse wasProcessed(Boolean wasProcessed) {
    
    
    
    
    this.wasProcessed = wasProcessed;
    return this;
  }

   /**
   * Get wasProcessed
   * @return wasProcessed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getWasProcessed() {
    return wasProcessed;
  }


  public void setWasProcessed(Boolean wasProcessed) {
    
    
    
    this.wasProcessed = wasProcessed;
  }


  public SaleCreateTransactionResponse authCode(String authCode) {
    
    
    
    
    this.authCode = authCode;
    return this;
  }

   /**
   * Get authCode
   * @return authCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "697949", value = "")

  public String getAuthCode() {
    return authCode;
  }


  public void setAuthCode(String authCode) {
    
    
    
    this.authCode = authCode;
  }


  public SaleCreateTransactionResponse refNumber(String refNumber) {
    
    
    
    
    this.refNumber = refNumber;
    return this;
  }

   /**
   * Get refNumber
   * @return refNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "XZZ01c19f5570e6bDAFUP3DOWVUR5FSB", value = "")

  public String getRefNumber() {
    return refNumber;
  }


  public void setRefNumber(String refNumber) {
    
    
    
    this.refNumber = refNumber;
  }


  public SaleCreateTransactionResponse customerReceipt(String customerReceipt) {
    
    
    
    
    this.customerReceipt = customerReceipt;
    return this;
  }

   /**
   * Get customerReceipt
   * @return customerReceipt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Not Available", value = "")

  public String getCustomerReceipt() {
    return customerReceipt;
  }


  public void setCustomerReceipt(String customerReceipt) {
    
    
    
    this.customerReceipt = customerReceipt;
  }


  public SaleCreateTransactionResponse statementDescription(String statementDescription) {
    
    
    
    
    this.statementDescription = statementDescription;
    return this;
  }

   /**
   * Get statementDescription
   * @return statementDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "")

  public String getStatementDescription() {
    return statementDescription;
  }


  public void setStatementDescription(String statementDescription) {
    
    
    
    this.statementDescription = statementDescription;
  }


  public SaleCreateTransactionResponse generatedBy(String generatedBy) {
    
    
    
    
    this.generatedBy = generatedBy;
    return this;
  }

   /**
   * Get generatedBy
   * @return generatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jharmonfinaro", value = "")

  public String getGeneratedBy() {
    return generatedBy;
  }


  public void setGeneratedBy(String generatedBy) {
    
    
    
    this.generatedBy = generatedBy;
  }


  public SaleCreateTransactionResponse card(SaleCreateTransactionResponseCard card) {
    
    
    
    
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SaleCreateTransactionResponseCard getCard() {
    return card;
  }


  public void setCard(SaleCreateTransactionResponseCard card) {
    
    
    
    this.card = card;
  }


  public SaleCreateTransactionResponse addressVerificationResult(String addressVerificationResult) {
    
    
    
    
    this.addressVerificationResult = addressVerificationResult;
    return this;
  }

   /**
   * Get addressVerificationResult
   * @return addressVerificationResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Unavailable", value = "")

  public String getAddressVerificationResult() {
    return addressVerificationResult;
  }


  public void setAddressVerificationResult(String addressVerificationResult) {
    
    
    
    this.addressVerificationResult = addressVerificationResult;
  }


  public SaleCreateTransactionResponse cvvVerificationCode(String cvvVerificationCode) {
    
    
    
    
    this.cvvVerificationCode = cvvVerificationCode;
    return this;
  }

   /**
   * Get cvvVerificationCode
   * @return cvvVerificationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "M", value = "")

  public String getCvvVerificationCode() {
    return cvvVerificationCode;
  }


  public void setCvvVerificationCode(String cvvVerificationCode) {
    
    
    
    this.cvvVerificationCode = cvvVerificationCode;
  }


  public SaleCreateTransactionResponse cvvVerificationResult(String cvvVerificationResult) {
    
    
    
    
    this.cvvVerificationResult = cvvVerificationResult;
    return this;
  }

   /**
   * Get cvvVerificationResult
   * @return cvvVerificationResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CVV2 Match. Indicates that the Funds Transfer API or the issuer was able to verify the CVV2 value provided by the merchant.", value = "")

  public String getCvvVerificationResult() {
    return cvvVerificationResult;
  }


  public void setCvvVerificationResult(String cvvVerificationResult) {
    
    
    
    this.cvvVerificationResult = cvvVerificationResult;
  }


  public SaleCreateTransactionResponse cavvResponseCode(String cavvResponseCode) {
    
    
    
    
    this.cavvResponseCode = cavvResponseCode;
    return this;
  }

   /**
   * Get cavvResponseCode
   * @return cavvResponseCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "")

  public String getCavvResponseCode() {
    return cavvResponseCode;
  }


  public void setCavvResponseCode(String cavvResponseCode) {
    
    
    
    this.cavvResponseCode = cavvResponseCode;
  }


  public SaleCreateTransactionResponse walletProvider(Integer walletProvider) {
    
    
    
    
    this.walletProvider = walletProvider;
    return this;
  }

   /**
   * Get walletProvider
   * @return walletProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getWalletProvider() {
    return walletProvider;
  }


  public void setWalletProvider(Integer walletProvider) {
    
    
    
    this.walletProvider = walletProvider;
  }


  public SaleCreateTransactionResponse isFromIssueLite(Boolean isFromIssueLite) {
    
    
    
    
    this.isFromIssueLite = isFromIssueLite;
    return this;
  }

   /**
   * Get isFromIssueLite
   * @return isFromIssueLite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getIsFromIssueLite() {
    return isFromIssueLite;
  }


  public void setIsFromIssueLite(Boolean isFromIssueLite) {
    
    
    
    this.isFromIssueLite = isFromIssueLite;
  }


  public SaleCreateTransactionResponse labelIds(List<Integer> labelIds) {
    
    
    
    
    this.labelIds = labelIds;
    return this;
  }

  public SaleCreateTransactionResponse addLabelIdsItem(Integer labelIdsItem) {
    if (this.labelIds == null) {
      this.labelIds = new ArrayList<>();
    }
    this.labelIds.add(labelIdsItem);
    return this;
  }

   /**
   * Get labelIds
   * @return labelIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getLabelIds() {
    return labelIds;
  }


  public void setLabelIds(List<Integer> labelIds) {
    
    
    
    this.labelIds = labelIds;
  }


  public SaleCreateTransactionResponse remainingAmount(Integer remainingAmount) {
    
    
    
    
    this.remainingAmount = remainingAmount;
    return this;
  }

   /**
   * Get remainingAmount
   * @return remainingAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getRemainingAmount() {
    return remainingAmount;
  }


  public void setRemainingAmount(Integer remainingAmount) {
    
    
    
    this.remainingAmount = remainingAmount;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SaleCreateTransactionResponse instance itself
   */
  public SaleCreateTransactionResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleCreateTransactionResponse saleCreateTransactionResponse = (SaleCreateTransactionResponse) o;
    return Objects.equals(this.guid, saleCreateTransactionResponse.guid) &&
        Objects.equals(this.status, saleCreateTransactionResponse.status) &&
        Objects.equals(this.type, saleCreateTransactionResponse.type) &&
        Objects.equals(this.batchStatus, saleCreateTransactionResponse.batchStatus) &&
        Objects.equals(this.timeStamp, saleCreateTransactionResponse.timeStamp) &&
        Objects.equals(this.deviceGuid, saleCreateTransactionResponse.deviceGuid) &&
        Objects.equals(this.amount, saleCreateTransactionResponse.amount) &&
        Objects.equals(this.activated, saleCreateTransactionResponse.activated) &&
        Objects.equals(this.tenderType, saleCreateTransactionResponse.tenderType) &&
        Objects.equals(this.effectiveAmount, saleCreateTransactionResponse.effectiveAmount) &&
        Objects.equals(this.riskResponse, saleCreateTransactionResponse.riskResponse) &&
        Objects.equals(this.orderNumber, saleCreateTransactionResponse.orderNumber) &&
        Objects.equals(this.cardDataSource, saleCreateTransactionResponse.cardDataSource) &&
        Objects.equals(this.customerID, saleCreateTransactionResponse.customerID) &&
        Objects.equals(this.batchGuid, saleCreateTransactionResponse.batchGuid) &&
        Objects.equals(this.connexPayTransaction, saleCreateTransactionResponse.connexPayTransaction) &&
        Objects.equals(this.associationId, saleCreateTransactionResponse.associationId) &&
        Objects.equals(this.processorStatusCode, saleCreateTransactionResponse.processorStatusCode) &&
        Objects.equals(this.processorResponseMessage, saleCreateTransactionResponse.processorResponseMessage) &&
        Objects.equals(this.wasProcessed, saleCreateTransactionResponse.wasProcessed) &&
        Objects.equals(this.authCode, saleCreateTransactionResponse.authCode) &&
        Objects.equals(this.refNumber, saleCreateTransactionResponse.refNumber) &&
        Objects.equals(this.customerReceipt, saleCreateTransactionResponse.customerReceipt) &&
        Objects.equals(this.statementDescription, saleCreateTransactionResponse.statementDescription) &&
        Objects.equals(this.generatedBy, saleCreateTransactionResponse.generatedBy) &&
        Objects.equals(this.card, saleCreateTransactionResponse.card) &&
        Objects.equals(this.addressVerificationResult, saleCreateTransactionResponse.addressVerificationResult) &&
        Objects.equals(this.cvvVerificationCode, saleCreateTransactionResponse.cvvVerificationCode) &&
        Objects.equals(this.cvvVerificationResult, saleCreateTransactionResponse.cvvVerificationResult) &&
        Objects.equals(this.cavvResponseCode, saleCreateTransactionResponse.cavvResponseCode) &&
        Objects.equals(this.walletProvider, saleCreateTransactionResponse.walletProvider) &&
        Objects.equals(this.isFromIssueLite, saleCreateTransactionResponse.isFromIssueLite) &&
        Objects.equals(this.labelIds, saleCreateTransactionResponse.labelIds) &&
        Objects.equals(this.remainingAmount, saleCreateTransactionResponse.remainingAmount)&&
        Objects.equals(this.additionalProperties, saleCreateTransactionResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(guid, status, type, batchStatus, timeStamp, deviceGuid, amount, activated, tenderType, effectiveAmount, riskResponse, orderNumber, cardDataSource, customerID, batchGuid, connexPayTransaction, associationId, processorStatusCode, processorResponseMessage, wasProcessed, authCode, refNumber, customerReceipt, statementDescription, generatedBy, card, addressVerificationResult, cvvVerificationCode, cvvVerificationResult, cavvResponseCode, walletProvider, isFromIssueLite, labelIds, remainingAmount, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleCreateTransactionResponse {\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    batchStatus: ").append(toIndentedString(batchStatus)).append("\n");
    sb.append("    timeStamp: ").append(toIndentedString(timeStamp)).append("\n");
    sb.append("    deviceGuid: ").append(toIndentedString(deviceGuid)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    activated: ").append(toIndentedString(activated)).append("\n");
    sb.append("    tenderType: ").append(toIndentedString(tenderType)).append("\n");
    sb.append("    effectiveAmount: ").append(toIndentedString(effectiveAmount)).append("\n");
    sb.append("    riskResponse: ").append(toIndentedString(riskResponse)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    cardDataSource: ").append(toIndentedString(cardDataSource)).append("\n");
    sb.append("    customerID: ").append(toIndentedString(customerID)).append("\n");
    sb.append("    batchGuid: ").append(toIndentedString(batchGuid)).append("\n");
    sb.append("    connexPayTransaction: ").append(toIndentedString(connexPayTransaction)).append("\n");
    sb.append("    associationId: ").append(toIndentedString(associationId)).append("\n");
    sb.append("    processorStatusCode: ").append(toIndentedString(processorStatusCode)).append("\n");
    sb.append("    processorResponseMessage: ").append(toIndentedString(processorResponseMessage)).append("\n");
    sb.append("    wasProcessed: ").append(toIndentedString(wasProcessed)).append("\n");
    sb.append("    authCode: ").append(toIndentedString(authCode)).append("\n");
    sb.append("    refNumber: ").append(toIndentedString(refNumber)).append("\n");
    sb.append("    customerReceipt: ").append(toIndentedString(customerReceipt)).append("\n");
    sb.append("    statementDescription: ").append(toIndentedString(statementDescription)).append("\n");
    sb.append("    generatedBy: ").append(toIndentedString(generatedBy)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    addressVerificationResult: ").append(toIndentedString(addressVerificationResult)).append("\n");
    sb.append("    cvvVerificationCode: ").append(toIndentedString(cvvVerificationCode)).append("\n");
    sb.append("    cvvVerificationResult: ").append(toIndentedString(cvvVerificationResult)).append("\n");
    sb.append("    cavvResponseCode: ").append(toIndentedString(cavvResponseCode)).append("\n");
    sb.append("    walletProvider: ").append(toIndentedString(walletProvider)).append("\n");
    sb.append("    isFromIssueLite: ").append(toIndentedString(isFromIssueLite)).append("\n");
    sb.append("    labelIds: ").append(toIndentedString(labelIds)).append("\n");
    sb.append("    remainingAmount: ").append(toIndentedString(remainingAmount)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("guid");
    openapiFields.add("status");
    openapiFields.add("type");
    openapiFields.add("batchStatus");
    openapiFields.add("timeStamp");
    openapiFields.add("deviceGuid");
    openapiFields.add("amount");
    openapiFields.add("activated");
    openapiFields.add("tenderType");
    openapiFields.add("effectiveAmount");
    openapiFields.add("riskResponse");
    openapiFields.add("orderNumber");
    openapiFields.add("cardDataSource");
    openapiFields.add("customerID");
    openapiFields.add("batchGuid");
    openapiFields.add("connexPayTransaction");
    openapiFields.add("associationId");
    openapiFields.add("processorStatusCode");
    openapiFields.add("processorResponseMessage");
    openapiFields.add("wasProcessed");
    openapiFields.add("authCode");
    openapiFields.add("refNumber");
    openapiFields.add("customerReceipt");
    openapiFields.add("statementDescription");
    openapiFields.add("generatedBy");
    openapiFields.add("Card");
    openapiFields.add("addressVerificationResult");
    openapiFields.add("cvvVerificationCode");
    openapiFields.add("cvvVerificationResult");
    openapiFields.add("cavvResponseCode");
    openapiFields.add("walletProvider");
    openapiFields.add("isFromIssueLite");
    openapiFields.add("labelIds");
    openapiFields.add("remainingAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SaleCreateTransactionResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SaleCreateTransactionResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SaleCreateTransactionResponse is not found in the empty JSON string", SaleCreateTransactionResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("batchStatus") != null && !jsonObj.get("batchStatus").isJsonNull()) && !jsonObj.get("batchStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `batchStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("batchStatus").toString()));
      }
      if ((jsonObj.get("timeStamp") != null && !jsonObj.get("timeStamp").isJsonNull()) && !jsonObj.get("timeStamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeStamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeStamp").toString()));
      }
      if ((jsonObj.get("deviceGuid") != null && !jsonObj.get("deviceGuid").isJsonNull()) && !jsonObj.get("deviceGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deviceGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceGuid").toString()));
      }
      if ((jsonObj.get("tenderType") != null && !jsonObj.get("tenderType").isJsonNull()) && !jsonObj.get("tenderType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenderType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenderType").toString()));
      }
      // validate the optional field `riskResponse`
      if (jsonObj.get("riskResponse") != null && !jsonObj.get("riskResponse").isJsonNull()) {
        SaleCreateTransactionResponseRiskResponse.validateJsonObject(jsonObj.getAsJsonObject("riskResponse"));
      }
      if ((jsonObj.get("orderNumber") != null && !jsonObj.get("orderNumber").isJsonNull()) && !jsonObj.get("orderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderNumber").toString()));
      }
      if ((jsonObj.get("cardDataSource") != null && !jsonObj.get("cardDataSource").isJsonNull()) && !jsonObj.get("cardDataSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardDataSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardDataSource").toString()));
      }
      if ((jsonObj.get("customerID") != null && !jsonObj.get("customerID").isJsonNull()) && !jsonObj.get("customerID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerID").toString()));
      }
      if ((jsonObj.get("batchGuid") != null && !jsonObj.get("batchGuid").isJsonNull()) && !jsonObj.get("batchGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `batchGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("batchGuid").toString()));
      }
      // validate the optional field `connexPayTransaction`
      if (jsonObj.get("connexPayTransaction") != null && !jsonObj.get("connexPayTransaction").isJsonNull()) {
        SaleCreateTransactionResponseConnexPayTransaction.validateJsonObject(jsonObj.getAsJsonObject("connexPayTransaction"));
      }
      if ((jsonObj.get("associationId") != null && !jsonObj.get("associationId").isJsonNull()) && !jsonObj.get("associationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `associationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("associationId").toString()));
      }
      if ((jsonObj.get("processorStatusCode") != null && !jsonObj.get("processorStatusCode").isJsonNull()) && !jsonObj.get("processorStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processorStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processorStatusCode").toString()));
      }
      if ((jsonObj.get("processorResponseMessage") != null && !jsonObj.get("processorResponseMessage").isJsonNull()) && !jsonObj.get("processorResponseMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processorResponseMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processorResponseMessage").toString()));
      }
      if ((jsonObj.get("authCode") != null && !jsonObj.get("authCode").isJsonNull()) && !jsonObj.get("authCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authCode").toString()));
      }
      if ((jsonObj.get("refNumber") != null && !jsonObj.get("refNumber").isJsonNull()) && !jsonObj.get("refNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refNumber").toString()));
      }
      if ((jsonObj.get("customerReceipt") != null && !jsonObj.get("customerReceipt").isJsonNull()) && !jsonObj.get("customerReceipt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerReceipt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerReceipt").toString()));
      }
      if ((jsonObj.get("statementDescription") != null && !jsonObj.get("statementDescription").isJsonNull()) && !jsonObj.get("statementDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statementDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statementDescription").toString()));
      }
      if ((jsonObj.get("generatedBy") != null && !jsonObj.get("generatedBy").isJsonNull()) && !jsonObj.get("generatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generatedBy").toString()));
      }
      // validate the optional field `Card`
      if (jsonObj.get("Card") != null && !jsonObj.get("Card").isJsonNull()) {
        SaleCreateTransactionResponseCard.validateJsonObject(jsonObj.getAsJsonObject("Card"));
      }
      if ((jsonObj.get("addressVerificationResult") != null && !jsonObj.get("addressVerificationResult").isJsonNull()) && !jsonObj.get("addressVerificationResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressVerificationResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressVerificationResult").toString()));
      }
      if ((jsonObj.get("cvvVerificationCode") != null && !jsonObj.get("cvvVerificationCode").isJsonNull()) && !jsonObj.get("cvvVerificationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cvvVerificationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cvvVerificationCode").toString()));
      }
      if ((jsonObj.get("cvvVerificationResult") != null && !jsonObj.get("cvvVerificationResult").isJsonNull()) && !jsonObj.get("cvvVerificationResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cvvVerificationResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cvvVerificationResult").toString()));
      }
      if ((jsonObj.get("cavvResponseCode") != null && !jsonObj.get("cavvResponseCode").isJsonNull()) && !jsonObj.get("cavvResponseCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cavvResponseCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cavvResponseCode").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("labelIds") != null && !jsonObj.get("labelIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `labelIds` to be an array in the JSON string but got `%s`", jsonObj.get("labelIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SaleCreateTransactionResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SaleCreateTransactionResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SaleCreateTransactionResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SaleCreateTransactionResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SaleCreateTransactionResponse>() {
           @Override
           public void write(JsonWriter out, SaleCreateTransactionResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SaleCreateTransactionResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SaleCreateTransactionResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SaleCreateTransactionResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SaleCreateTransactionResponse
  * @throws IOException if the JSON string is invalid with respect to SaleCreateTransactionResponse
  */
  public static SaleCreateTransactionResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SaleCreateTransactionResponse.class);
  }

 /**
  * Convert an instance of SaleCreateTransactionResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

