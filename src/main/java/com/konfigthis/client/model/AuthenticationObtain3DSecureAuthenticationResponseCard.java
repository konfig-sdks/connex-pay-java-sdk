/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AuthenticationObtain3DSecureAuthenticationResponseCard
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AuthenticationObtain3DSecureAuthenticationResponseCard {
  public static final String SERIALIZED_NAME_FIRST6 = "first6";
  @SerializedName(SERIALIZED_NAME_FIRST6)
  private String first6;

  public static final String SERIALIZED_NAME_FIRST4 = "first4";
  @SerializedName(SERIALIZED_NAME_FIRST4)
  private String first4;

  public static final String SERIALIZED_NAME_LAST4 = "last4";
  @SerializedName(SERIALIZED_NAME_LAST4)
  private String last4;

  public static final String SERIALIZED_NAME_CARD_HOLDER_NAME = "cardHolderName";
  @SerializedName(SERIALIZED_NAME_CARD_HOLDER_NAME)
  private String cardHolderName;

  public static final String SERIALIZED_NAME_CARD_TYPE = "cardType";
  @SerializedName(SERIALIZED_NAME_CARD_TYPE)
  private String cardType;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expirationDate";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private String expirationDate;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public AuthenticationObtain3DSecureAuthenticationResponseCard() {
  }

  public AuthenticationObtain3DSecureAuthenticationResponseCard first6(String first6) {
    
    
    
    
    this.first6 = first6;
    return this;
  }

   /**
   * Get first6
   * @return first6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "401881", value = "")

  public String getFirst6() {
    return first6;
  }


  public void setFirst6(String first6) {
    
    
    
    this.first6 = first6;
  }


  public AuthenticationObtain3DSecureAuthenticationResponseCard first4(String first4) {
    
    
    
    
    this.first4 = first4;
    return this;
  }

   /**
   * Get first4
   * @return first4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4018", value = "")

  public String getFirst4() {
    return first4;
  }


  public void setFirst4(String first4) {
    
    
    
    this.first4 = first4;
  }


  public AuthenticationObtain3DSecureAuthenticationResponseCard last4(String last4) {
    
    
    
    
    this.last4 = last4;
    return this;
  }

   /**
   * Get last4
   * @return last4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0036", value = "")

  public String getLast4() {
    return last4;
  }


  public void setLast4(String last4) {
    
    
    
    this.last4 = last4;
  }


  public AuthenticationObtain3DSecureAuthenticationResponseCard cardHolderName(String cardHolderName) {
    
    
    
    
    this.cardHolderName = cardHolderName;
    return this;
  }

   /**
   * Get cardHolderName
   * @return cardHolderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jason Harmon", value = "")

  public String getCardHolderName() {
    return cardHolderName;
  }


  public void setCardHolderName(String cardHolderName) {
    
    
    
    this.cardHolderName = cardHolderName;
  }


  public AuthenticationObtain3DSecureAuthenticationResponseCard cardType(String cardType) {
    
    
    
    
    this.cardType = cardType;
    return this;
  }

   /**
   * Get cardType
   * @return cardType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Visa", value = "")

  public String getCardType() {
    return cardType;
  }


  public void setCardType(String cardType) {
    
    
    
    this.cardType = cardType;
  }


  public AuthenticationObtain3DSecureAuthenticationResponseCard expirationDate(String expirationDate) {
    
    
    
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-12", value = "")

  public String getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(String expirationDate) {
    
    
    
    this.expirationDate = expirationDate;
  }


  public AuthenticationObtain3DSecureAuthenticationResponseCard guid(String guid) {
    
    
    
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "c3398555-e4c0-43da-b3ca-6abc475b79b9", value = "")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    
    
    
    this.guid = guid;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AuthenticationObtain3DSecureAuthenticationResponseCard instance itself
   */
  public AuthenticationObtain3DSecureAuthenticationResponseCard putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationObtain3DSecureAuthenticationResponseCard authenticationObtain3DSecureAuthenticationResponseCard = (AuthenticationObtain3DSecureAuthenticationResponseCard) o;
    return Objects.equals(this.first6, authenticationObtain3DSecureAuthenticationResponseCard.first6) &&
        Objects.equals(this.first4, authenticationObtain3DSecureAuthenticationResponseCard.first4) &&
        Objects.equals(this.last4, authenticationObtain3DSecureAuthenticationResponseCard.last4) &&
        Objects.equals(this.cardHolderName, authenticationObtain3DSecureAuthenticationResponseCard.cardHolderName) &&
        Objects.equals(this.cardType, authenticationObtain3DSecureAuthenticationResponseCard.cardType) &&
        Objects.equals(this.expirationDate, authenticationObtain3DSecureAuthenticationResponseCard.expirationDate) &&
        Objects.equals(this.guid, authenticationObtain3DSecureAuthenticationResponseCard.guid)&&
        Objects.equals(this.additionalProperties, authenticationObtain3DSecureAuthenticationResponseCard.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(first6, first4, last4, cardHolderName, cardType, expirationDate, guid, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationObtain3DSecureAuthenticationResponseCard {\n");
    sb.append("    first6: ").append(toIndentedString(first6)).append("\n");
    sb.append("    first4: ").append(toIndentedString(first4)).append("\n");
    sb.append("    last4: ").append(toIndentedString(last4)).append("\n");
    sb.append("    cardHolderName: ").append(toIndentedString(cardHolderName)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("first6");
    openapiFields.add("first4");
    openapiFields.add("last4");
    openapiFields.add("cardHolderName");
    openapiFields.add("cardType");
    openapiFields.add("expirationDate");
    openapiFields.add("guid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AuthenticationObtain3DSecureAuthenticationResponseCard
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AuthenticationObtain3DSecureAuthenticationResponseCard.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AuthenticationObtain3DSecureAuthenticationResponseCard is not found in the empty JSON string", AuthenticationObtain3DSecureAuthenticationResponseCard.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("first6") != null && !jsonObj.get("first6").isJsonNull()) && !jsonObj.get("first6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first6").toString()));
      }
      if ((jsonObj.get("first4") != null && !jsonObj.get("first4").isJsonNull()) && !jsonObj.get("first4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first4").toString()));
      }
      if ((jsonObj.get("last4") != null && !jsonObj.get("last4").isJsonNull()) && !jsonObj.get("last4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last4").toString()));
      }
      if ((jsonObj.get("cardHolderName") != null && !jsonObj.get("cardHolderName").isJsonNull()) && !jsonObj.get("cardHolderName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardHolderName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardHolderName").toString()));
      }
      if ((jsonObj.get("cardType") != null && !jsonObj.get("cardType").isJsonNull()) && !jsonObj.get("cardType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardType").toString()));
      }
      if ((jsonObj.get("expirationDate") != null && !jsonObj.get("expirationDate").isJsonNull()) && !jsonObj.get("expirationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expirationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expirationDate").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AuthenticationObtain3DSecureAuthenticationResponseCard.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AuthenticationObtain3DSecureAuthenticationResponseCard' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AuthenticationObtain3DSecureAuthenticationResponseCard> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AuthenticationObtain3DSecureAuthenticationResponseCard.class));

       return (TypeAdapter<T>) new TypeAdapter<AuthenticationObtain3DSecureAuthenticationResponseCard>() {
           @Override
           public void write(JsonWriter out, AuthenticationObtain3DSecureAuthenticationResponseCard value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AuthenticationObtain3DSecureAuthenticationResponseCard read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AuthenticationObtain3DSecureAuthenticationResponseCard instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AuthenticationObtain3DSecureAuthenticationResponseCard given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AuthenticationObtain3DSecureAuthenticationResponseCard
  * @throws IOException if the JSON string is invalid with respect to AuthenticationObtain3DSecureAuthenticationResponseCard
  */
  public static AuthenticationObtain3DSecureAuthenticationResponseCard fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AuthenticationObtain3DSecureAuthenticationResponseCard.class);
  }

 /**
  * Convert an instance of AuthenticationObtain3DSecureAuthenticationResponseCard to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

