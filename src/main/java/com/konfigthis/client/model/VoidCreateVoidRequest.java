/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * VoidCreateVoidRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class VoidCreateVoidRequest {
  public static final String SERIALIZED_NAME_DEVICE_GUID = "DeviceGuid";
  @SerializedName(SERIALIZED_NAME_DEVICE_GUID)
  private String deviceGuid;

  public static final String SERIALIZED_NAME_SALE_GUID = "SaleGuid";
  @SerializedName(SERIALIZED_NAME_SALE_GUID)
  private String saleGuid = "Conditional Mandatory when SaleReferenceNumber, AuthOnlyGuid and ReturnGuid parameters are not present";

  public static final String SERIALIZED_NAME_RETURN_GUID = "ReturnGuid";
  @SerializedName(SERIALIZED_NAME_RETURN_GUID)
  private String returnGuid = "Conditional Mandatory when SaleGuid, AuthOnlyGuid and SaleReferenceNumber parameters are not present";

  public static final String SERIALIZED_NAME_SALE_REFERENCE_NUMBER = "SaleReferenceNumber";
  @SerializedName(SERIALIZED_NAME_SALE_REFERENCE_NUMBER)
  private Integer saleReferenceNumber;

  public static final String SERIALIZED_NAME_AUTH_ONLY_GUID = "AuthOnlyGuid";
  @SerializedName(SERIALIZED_NAME_AUTH_ONLY_GUID)
  private String authOnlyGuid = "Conditional Mandatory when SaleGuid, SaleReferenceNumber and ReturnGuid parameters are not present";

  public static final String SERIALIZED_NAME_VOID_REASON = "VoidReason";
  @SerializedName(SERIALIZED_NAME_VOID_REASON)
  private String voidReason = "Optional";

  public static final String SERIALIZED_NAME_AMOUNT = "Amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Float amount;

  public static final String SERIALIZED_NAME_SEQUENCE_NUMBER = "SequenceNumber";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_NUMBER)
  private String sequenceNumber = "Optional";

  public VoidCreateVoidRequest() {
  }

  public VoidCreateVoidRequest deviceGuid(String deviceGuid) {
    
    
    
    
    this.deviceGuid = deviceGuid;
    return this;
  }

   /**
   * Device’s Guid provided by ConnexPay.
   * @return deviceGuid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Device’s Guid provided by ConnexPay.")

  public String getDeviceGuid() {
    return deviceGuid;
  }


  public void setDeviceGuid(String deviceGuid) {
    
    
    
    this.deviceGuid = deviceGuid;
  }


  public VoidCreateVoidRequest saleGuid(String saleGuid) {
    
    
    
    
    this.saleGuid = saleGuid;
    return this;
  }

   /**
   * Sale Transaction Guid
   * @return saleGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Conditional Mandatory when SaleReferenceNumber, AuthOnlyGuid and ReturnGuid parameters are not present", value = "Sale Transaction Guid")

  public String getSaleGuid() {
    return saleGuid;
  }


  public void setSaleGuid(String saleGuid) {
    
    
    
    this.saleGuid = saleGuid;
  }


  public VoidCreateVoidRequest returnGuid(String returnGuid) {
    
    
    
    
    this.returnGuid = returnGuid;
    return this;
  }

   /**
   * Return&#39;s Guid
   * @return returnGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Conditional Mandatory when SaleGuid, AuthOnlyGuid and SaleReferenceNumber parameters are not present", value = "Return's Guid")

  public String getReturnGuid() {
    return returnGuid;
  }


  public void setReturnGuid(String returnGuid) {
    
    
    
    this.returnGuid = returnGuid;
  }


  public VoidCreateVoidRequest saleReferenceNumber(Integer saleReferenceNumber) {
    
    
    
    
    this.saleReferenceNumber = saleReferenceNumber;
    return this;
  }

   /**
   * Sale Reference Number
   * @return saleReferenceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sale Reference Number")

  public Integer getSaleReferenceNumber() {
    return saleReferenceNumber;
  }


  public void setSaleReferenceNumber(Integer saleReferenceNumber) {
    
    
    
    this.saleReferenceNumber = saleReferenceNumber;
  }


  public VoidCreateVoidRequest authOnlyGuid(String authOnlyGuid) {
    
    
    
    
    this.authOnlyGuid = authOnlyGuid;
    return this;
  }

   /**
   * Guid to include in request when voiding an Auth Only request.
   * @return authOnlyGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Conditional Mandatory when SaleGuid, SaleReferenceNumber and ReturnGuid parameters are not present", value = "Guid to include in request when voiding an Auth Only request.")

  public String getAuthOnlyGuid() {
    return authOnlyGuid;
  }


  public void setAuthOnlyGuid(String authOnlyGuid) {
    
    
    
    this.authOnlyGuid = authOnlyGuid;
  }


  public VoidCreateVoidRequest voidReason(String voidReason) {
    
    
    
    
    this.voidReason = voidReason;
    return this;
  }

   /**
   * Indicates the reason the transaction was voided.  Allowed values:  1. POST_AUTH_USER_DECLINE 2. DEVICE_TIMEOUT 3. DEVICE_UNAVAILABLE 4. PARTIAL_REVERSAL 5. TORN_TRANSACTIONS 6. POST_AUTH_CHIP_DECLINE
   * @return voidReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Optional", value = "Indicates the reason the transaction was voided.  Allowed values:  1. POST_AUTH_USER_DECLINE 2. DEVICE_TIMEOUT 3. DEVICE_UNAVAILABLE 4. PARTIAL_REVERSAL 5. TORN_TRANSACTIONS 6. POST_AUTH_CHIP_DECLINE")

  public String getVoidReason() {
    return voidReason;
  }


  public void setVoidReason(String voidReason) {
    
    
    
    this.voidReason = voidReason;
  }


  public VoidCreateVoidRequest amount(Float amount) {
    
    
    
    
    this.amount = amount;
    return this;
  }

   /**
   * Amount to be voided.  Note: Amount is be used once only for credit card Sales and should not exceed corresponding Sale’s Amount.
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount to be voided.  Note: Amount is be used once only for credit card Sales and should not exceed corresponding Sale’s Amount.")

  public Float getAmount() {
    return amount;
  }


  public void setAmount(Float amount) {
    
    
    
    this.amount = amount;
  }


  public VoidCreateVoidRequest sequenceNumber(String sequenceNumber) {
    
    
    
    
    this.sequenceNumber = sequenceNumber;
    return this;
  }

   /**
   * Transaction sequence number within client environment. Provide a unique SequenceNumber for each new request. If the same value is sent within 30 minutes it will be considered a duplicate request. Note: value is not searchable or reportable in ConnexPay portal.  Alphanumeric.
   * @return sequenceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Optional", value = "Transaction sequence number within client environment. Provide a unique SequenceNumber for each new request. If the same value is sent within 30 minutes it will be considered a duplicate request. Note: value is not searchable or reportable in ConnexPay portal.  Alphanumeric.")

  public String getSequenceNumber() {
    return sequenceNumber;
  }


  public void setSequenceNumber(String sequenceNumber) {
    
    
    
    this.sequenceNumber = sequenceNumber;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the VoidCreateVoidRequest instance itself
   */
  public VoidCreateVoidRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VoidCreateVoidRequest voidCreateVoidRequest = (VoidCreateVoidRequest) o;
    return Objects.equals(this.deviceGuid, voidCreateVoidRequest.deviceGuid) &&
        Objects.equals(this.saleGuid, voidCreateVoidRequest.saleGuid) &&
        Objects.equals(this.returnGuid, voidCreateVoidRequest.returnGuid) &&
        Objects.equals(this.saleReferenceNumber, voidCreateVoidRequest.saleReferenceNumber) &&
        Objects.equals(this.authOnlyGuid, voidCreateVoidRequest.authOnlyGuid) &&
        Objects.equals(this.voidReason, voidCreateVoidRequest.voidReason) &&
        Objects.equals(this.amount, voidCreateVoidRequest.amount) &&
        Objects.equals(this.sequenceNumber, voidCreateVoidRequest.sequenceNumber)&&
        Objects.equals(this.additionalProperties, voidCreateVoidRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceGuid, saleGuid, returnGuid, saleReferenceNumber, authOnlyGuid, voidReason, amount, sequenceNumber, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VoidCreateVoidRequest {\n");
    sb.append("    deviceGuid: ").append(toIndentedString(deviceGuid)).append("\n");
    sb.append("    saleGuid: ").append(toIndentedString(saleGuid)).append("\n");
    sb.append("    returnGuid: ").append(toIndentedString(returnGuid)).append("\n");
    sb.append("    saleReferenceNumber: ").append(toIndentedString(saleReferenceNumber)).append("\n");
    sb.append("    authOnlyGuid: ").append(toIndentedString(authOnlyGuid)).append("\n");
    sb.append("    voidReason: ").append(toIndentedString(voidReason)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    sequenceNumber: ").append(toIndentedString(sequenceNumber)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DeviceGuid");
    openapiFields.add("SaleGuid");
    openapiFields.add("ReturnGuid");
    openapiFields.add("SaleReferenceNumber");
    openapiFields.add("AuthOnlyGuid");
    openapiFields.add("VoidReason");
    openapiFields.add("Amount");
    openapiFields.add("SequenceNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DeviceGuid");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to VoidCreateVoidRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!VoidCreateVoidRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VoidCreateVoidRequest is not found in the empty JSON string", VoidCreateVoidRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : VoidCreateVoidRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("DeviceGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DeviceGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DeviceGuid").toString()));
      }
      if ((jsonObj.get("SaleGuid") != null && !jsonObj.get("SaleGuid").isJsonNull()) && !jsonObj.get("SaleGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SaleGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SaleGuid").toString()));
      }
      if ((jsonObj.get("ReturnGuid") != null && !jsonObj.get("ReturnGuid").isJsonNull()) && !jsonObj.get("ReturnGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ReturnGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ReturnGuid").toString()));
      }
      if ((jsonObj.get("AuthOnlyGuid") != null && !jsonObj.get("AuthOnlyGuid").isJsonNull()) && !jsonObj.get("AuthOnlyGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AuthOnlyGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AuthOnlyGuid").toString()));
      }
      if ((jsonObj.get("VoidReason") != null && !jsonObj.get("VoidReason").isJsonNull()) && !jsonObj.get("VoidReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `VoidReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("VoidReason").toString()));
      }
      if ((jsonObj.get("SequenceNumber") != null && !jsonObj.get("SequenceNumber").isJsonNull()) && !jsonObj.get("SequenceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SequenceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SequenceNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VoidCreateVoidRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VoidCreateVoidRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VoidCreateVoidRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VoidCreateVoidRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<VoidCreateVoidRequest>() {
           @Override
           public void write(JsonWriter out, VoidCreateVoidRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public VoidCreateVoidRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             VoidCreateVoidRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VoidCreateVoidRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VoidCreateVoidRequest
  * @throws IOException if the JSON string is invalid with respect to VoidCreateVoidRequest
  */
  public static VoidCreateVoidRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VoidCreateVoidRequest.class);
  }

 /**
  * Convert an instance of VoidCreateVoidRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

