/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SettlementSearchVirtualCardSettlementsRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SettlementSearchVirtualCardSettlementsRequest {
  public static final String SERIALIZED_NAME_MERCHANT_GUID = "MerchantGuid";
  @SerializedName(SERIALIZED_NAME_MERCHANT_GUID)
  private String merchantGuid;

  public static final String SERIALIZED_NAME_DATE_FROM = "DateFrom";
  @SerializedName(SERIALIZED_NAME_DATE_FROM)
  private LocalDate dateFrom;

  public static final String SERIALIZED_NAME_DATE_TO = "DateTo";
  @SerializedName(SERIALIZED_NAME_DATE_TO)
  private LocalDate dateTo;

  public static final String SERIALIZED_NAME_POSTED_DATE_FROM = "PostedDateFrom";
  @SerializedName(SERIALIZED_NAME_POSTED_DATE_FROM)
  private LocalDate postedDateFrom;

  public static final String SERIALIZED_NAME_POSTED_DATE_TO = "PostedDateTo";
  @SerializedName(SERIALIZED_NAME_POSTED_DATE_TO)
  private LocalDate postedDateTo;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "OrderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_ISSUED_AMOUNT_FROM = "IssuedAmountFrom";
  @SerializedName(SERIALIZED_NAME_ISSUED_AMOUNT_FROM)
  private Long issuedAmountFrom;

  public static final String SERIALIZED_NAME_ISSUED_AMOUNT_TO = "IssuedAmountTo";
  @SerializedName(SERIALIZED_NAME_ISSUED_AMOUNT_TO)
  private Long issuedAmountTo;

  public static final String SERIALIZED_NAME_ISSUED_CARD_LAST_FOUR = "IssuedCardLastFour";
  @SerializedName(SERIALIZED_NAME_ISSUED_CARD_LAST_FOUR)
  private String issuedCardLastFour;

  public static final String SERIALIZED_NAME_POSTED_AMOUNT_FROM = "PostedAmountFrom";
  @SerializedName(SERIALIZED_NAME_POSTED_AMOUNT_FROM)
  private Float postedAmountFrom;

  public static final String SERIALIZED_NAME_POSTED_AMOUNT_TO = "PostedAmountTo";
  @SerializedName(SERIALIZED_NAME_POSTED_AMOUNT_TO)
  private Float postedAmountTo;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE_FROM = "ExpirationDateFrom";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE_FROM)
  private LocalDate expirationDateFrom;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE_TO = "ExpirationDateTo";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE_TO)
  private LocalDate expirationDateTo;

  public SettlementSearchVirtualCardSettlementsRequest() {
  }

  public SettlementSearchVirtualCardSettlementsRequest merchantGuid(String merchantGuid) {
    
    
    
    
    this.merchantGuid = merchantGuid;
    return this;
  }

   /**
   * Merchant&#39;s Guid.
   * @return merchantGuid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Merchant's Guid.")

  public String getMerchantGuid() {
    return merchantGuid;
  }


  public void setMerchantGuid(String merchantGuid) {
    
    
    
    this.merchantGuid = merchantGuid;
  }


  public SettlementSearchVirtualCardSettlementsRequest dateFrom(LocalDate dateFrom) {
    
    
    
    
    this.dateFrom = dateFrom;
    return this;
  }

   /**
   * Card&#39;s Issued Date.
   * @return dateFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Card's Issued Date.")

  public LocalDate getDateFrom() {
    return dateFrom;
  }


  public void setDateFrom(LocalDate dateFrom) {
    
    
    
    this.dateFrom = dateFrom;
  }


  public SettlementSearchVirtualCardSettlementsRequest dateTo(LocalDate dateTo) {
    
    
    
    
    this.dateTo = dateTo;
    return this;
  }

   /**
   * Card&#39;s Issued Date.
   * @return dateTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Card's Issued Date.")

  public LocalDate getDateTo() {
    return dateTo;
  }


  public void setDateTo(LocalDate dateTo) {
    
    
    
    this.dateTo = dateTo;
  }


  public SettlementSearchVirtualCardSettlementsRequest postedDateFrom(LocalDate postedDateFrom) {
    
    
    
    
    this.postedDateFrom = postedDateFrom;
    return this;
  }

   /**
   * Card settlement post date.
   * @return postedDateFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Card settlement post date.")

  public LocalDate getPostedDateFrom() {
    return postedDateFrom;
  }


  public void setPostedDateFrom(LocalDate postedDateFrom) {
    
    
    
    this.postedDateFrom = postedDateFrom;
  }


  public SettlementSearchVirtualCardSettlementsRequest postedDateTo(LocalDate postedDateTo) {
    
    
    
    
    this.postedDateTo = postedDateTo;
    return this;
  }

   /**
   * Card settlement post date.
   * @return postedDateTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Card settlement post date.")

  public LocalDate getPostedDateTo() {
    return postedDateTo;
  }


  public void setPostedDateTo(LocalDate postedDateTo) {
    
    
    
    this.postedDateTo = postedDateTo;
  }


  public SettlementSearchVirtualCardSettlementsRequest orderNumber(String orderNumber) {
    
    
    
    
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Order Number. Max. Length &#x3D; 50.
   * @return orderNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Number. Max. Length = 50.")

  public String getOrderNumber() {
    return orderNumber;
  }


  public void setOrderNumber(String orderNumber) {
    
    
    
    this.orderNumber = orderNumber;
  }


  public SettlementSearchVirtualCardSettlementsRequest issuedAmountFrom(Long issuedAmountFrom) {
    
    
    
    
    this.issuedAmountFrom = issuedAmountFrom;
    return this;
  }

   /**
   * Issued Amount of the Card.
   * @return issuedAmountFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Issued Amount of the Card.")

  public Long getIssuedAmountFrom() {
    return issuedAmountFrom;
  }


  public void setIssuedAmountFrom(Long issuedAmountFrom) {
    
    
    
    this.issuedAmountFrom = issuedAmountFrom;
  }


  public SettlementSearchVirtualCardSettlementsRequest issuedAmountTo(Long issuedAmountTo) {
    
    
    
    
    this.issuedAmountTo = issuedAmountTo;
    return this;
  }

   /**
   * Issued Amount of the Card.
   * @return issuedAmountTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Issued Amount of the Card.")

  public Long getIssuedAmountTo() {
    return issuedAmountTo;
  }


  public void setIssuedAmountTo(Long issuedAmountTo) {
    
    
    
    this.issuedAmountTo = issuedAmountTo;
  }


  public SettlementSearchVirtualCardSettlementsRequest issuedCardLastFour(String issuedCardLastFour) {
    
    
    
    
    this.issuedCardLastFour = issuedCardLastFour;
    return this;
  }

   /**
   * Card last four number.
   * @return issuedCardLastFour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Card last four number.")

  public String getIssuedCardLastFour() {
    return issuedCardLastFour;
  }


  public void setIssuedCardLastFour(String issuedCardLastFour) {
    
    
    
    this.issuedCardLastFour = issuedCardLastFour;
  }


  public SettlementSearchVirtualCardSettlementsRequest postedAmountFrom(Float postedAmountFrom) {
    
    
    
    
    this.postedAmountFrom = postedAmountFrom;
    return this;
  }

   /**
   * Posted Amount of the Card.
   * @return postedAmountFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Posted Amount of the Card.")

  public Float getPostedAmountFrom() {
    return postedAmountFrom;
  }


  public void setPostedAmountFrom(Float postedAmountFrom) {
    
    
    
    this.postedAmountFrom = postedAmountFrom;
  }


  public SettlementSearchVirtualCardSettlementsRequest postedAmountTo(Float postedAmountTo) {
    
    
    
    
    this.postedAmountTo = postedAmountTo;
    return this;
  }

   /**
   * Posted Amount of the Card.
   * @return postedAmountTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Posted Amount of the Card.")

  public Float getPostedAmountTo() {
    return postedAmountTo;
  }


  public void setPostedAmountTo(Float postedAmountTo) {
    
    
    
    this.postedAmountTo = postedAmountTo;
  }


  public SettlementSearchVirtualCardSettlementsRequest expirationDateFrom(LocalDate expirationDateFrom) {
    
    
    
    
    this.expirationDateFrom = expirationDateFrom;
    return this;
  }

   /**
   * Card&#39;s expiration date.
   * @return expirationDateFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Card's expiration date.")

  public LocalDate getExpirationDateFrom() {
    return expirationDateFrom;
  }


  public void setExpirationDateFrom(LocalDate expirationDateFrom) {
    
    
    
    this.expirationDateFrom = expirationDateFrom;
  }


  public SettlementSearchVirtualCardSettlementsRequest expirationDateTo(LocalDate expirationDateTo) {
    
    
    
    
    this.expirationDateTo = expirationDateTo;
    return this;
  }

   /**
   * Card&#39;s expiration date.
   * @return expirationDateTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Card's expiration date.")

  public LocalDate getExpirationDateTo() {
    return expirationDateTo;
  }


  public void setExpirationDateTo(LocalDate expirationDateTo) {
    
    
    
    this.expirationDateTo = expirationDateTo;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SettlementSearchVirtualCardSettlementsRequest instance itself
   */
  public SettlementSearchVirtualCardSettlementsRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettlementSearchVirtualCardSettlementsRequest settlementSearchVirtualCardSettlementsRequest = (SettlementSearchVirtualCardSettlementsRequest) o;
    return Objects.equals(this.merchantGuid, settlementSearchVirtualCardSettlementsRequest.merchantGuid) &&
        Objects.equals(this.dateFrom, settlementSearchVirtualCardSettlementsRequest.dateFrom) &&
        Objects.equals(this.dateTo, settlementSearchVirtualCardSettlementsRequest.dateTo) &&
        Objects.equals(this.postedDateFrom, settlementSearchVirtualCardSettlementsRequest.postedDateFrom) &&
        Objects.equals(this.postedDateTo, settlementSearchVirtualCardSettlementsRequest.postedDateTo) &&
        Objects.equals(this.orderNumber, settlementSearchVirtualCardSettlementsRequest.orderNumber) &&
        Objects.equals(this.issuedAmountFrom, settlementSearchVirtualCardSettlementsRequest.issuedAmountFrom) &&
        Objects.equals(this.issuedAmountTo, settlementSearchVirtualCardSettlementsRequest.issuedAmountTo) &&
        Objects.equals(this.issuedCardLastFour, settlementSearchVirtualCardSettlementsRequest.issuedCardLastFour) &&
        Objects.equals(this.postedAmountFrom, settlementSearchVirtualCardSettlementsRequest.postedAmountFrom) &&
        Objects.equals(this.postedAmountTo, settlementSearchVirtualCardSettlementsRequest.postedAmountTo) &&
        Objects.equals(this.expirationDateFrom, settlementSearchVirtualCardSettlementsRequest.expirationDateFrom) &&
        Objects.equals(this.expirationDateTo, settlementSearchVirtualCardSettlementsRequest.expirationDateTo)&&
        Objects.equals(this.additionalProperties, settlementSearchVirtualCardSettlementsRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantGuid, dateFrom, dateTo, postedDateFrom, postedDateTo, orderNumber, issuedAmountFrom, issuedAmountTo, issuedCardLastFour, postedAmountFrom, postedAmountTo, expirationDateFrom, expirationDateTo, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettlementSearchVirtualCardSettlementsRequest {\n");
    sb.append("    merchantGuid: ").append(toIndentedString(merchantGuid)).append("\n");
    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("    postedDateFrom: ").append(toIndentedString(postedDateFrom)).append("\n");
    sb.append("    postedDateTo: ").append(toIndentedString(postedDateTo)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    issuedAmountFrom: ").append(toIndentedString(issuedAmountFrom)).append("\n");
    sb.append("    issuedAmountTo: ").append(toIndentedString(issuedAmountTo)).append("\n");
    sb.append("    issuedCardLastFour: ").append(toIndentedString(issuedCardLastFour)).append("\n");
    sb.append("    postedAmountFrom: ").append(toIndentedString(postedAmountFrom)).append("\n");
    sb.append("    postedAmountTo: ").append(toIndentedString(postedAmountTo)).append("\n");
    sb.append("    expirationDateFrom: ").append(toIndentedString(expirationDateFrom)).append("\n");
    sb.append("    expirationDateTo: ").append(toIndentedString(expirationDateTo)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MerchantGuid");
    openapiFields.add("DateFrom");
    openapiFields.add("DateTo");
    openapiFields.add("PostedDateFrom");
    openapiFields.add("PostedDateTo");
    openapiFields.add("OrderNumber");
    openapiFields.add("IssuedAmountFrom");
    openapiFields.add("IssuedAmountTo");
    openapiFields.add("IssuedCardLastFour");
    openapiFields.add("PostedAmountFrom");
    openapiFields.add("PostedAmountTo");
    openapiFields.add("ExpirationDateFrom");
    openapiFields.add("ExpirationDateTo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("MerchantGuid");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SettlementSearchVirtualCardSettlementsRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SettlementSearchVirtualCardSettlementsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SettlementSearchVirtualCardSettlementsRequest is not found in the empty JSON string", SettlementSearchVirtualCardSettlementsRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SettlementSearchVirtualCardSettlementsRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("MerchantGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MerchantGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MerchantGuid").toString()));
      }
      if ((jsonObj.get("OrderNumber") != null && !jsonObj.get("OrderNumber").isJsonNull()) && !jsonObj.get("OrderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OrderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OrderNumber").toString()));
      }
      if ((jsonObj.get("IssuedCardLastFour") != null && !jsonObj.get("IssuedCardLastFour").isJsonNull()) && !jsonObj.get("IssuedCardLastFour").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IssuedCardLastFour` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IssuedCardLastFour").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SettlementSearchVirtualCardSettlementsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SettlementSearchVirtualCardSettlementsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SettlementSearchVirtualCardSettlementsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SettlementSearchVirtualCardSettlementsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SettlementSearchVirtualCardSettlementsRequest>() {
           @Override
           public void write(JsonWriter out, SettlementSearchVirtualCardSettlementsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SettlementSearchVirtualCardSettlementsRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SettlementSearchVirtualCardSettlementsRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SettlementSearchVirtualCardSettlementsRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SettlementSearchVirtualCardSettlementsRequest
  * @throws IOException if the JSON string is invalid with respect to SettlementSearchVirtualCardSettlementsRequest
  */
  public static SettlementSearchVirtualCardSettlementsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SettlementSearchVirtualCardSettlementsRequest.class);
  }

 /**
  * Convert an instance of SettlementSearchVirtualCardSettlementsRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

