/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.SaleSearchSalesResponseSearchResultDTOInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SaleSearchSalesResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SaleSearchSalesResponse {
  public static final String SERIALIZED_NAME_PAGE_CURRENT = "pageCurrent";
  @SerializedName(SERIALIZED_NAME_PAGE_CURRENT)
  private Integer pageCurrent = 0;

  public static final String SERIALIZED_NAME_PAGE_CURRENT_RESULTS = "pageCurrentResults";
  @SerializedName(SERIALIZED_NAME_PAGE_CURRENT_RESULTS)
  private Integer pageCurrentResults = 0;

  public static final String SERIALIZED_NAME_PAGE_TOTAL = "pageTotal";
  @SerializedName(SERIALIZED_NAME_PAGE_TOTAL)
  private Integer pageTotal = 0;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize = 0;

  public static final String SERIALIZED_NAME_TOTAL_RESULTS = "totalResults";
  @SerializedName(SERIALIZED_NAME_TOTAL_RESULTS)
  private Integer totalResults = 0;

  public static final String SERIALIZED_NAME_CARD_SUMMARY = "cardSummary";
  @SerializedName(SERIALIZED_NAME_CARD_SUMMARY)
  private Object cardSummary = null;

  public static final String SERIALIZED_NAME_SEARCH_RESULT_D_T_O = "searchResultDTO";
  @SerializedName(SERIALIZED_NAME_SEARCH_RESULT_D_T_O)
  private List<SaleSearchSalesResponseSearchResultDTOInner> searchResultDTO = null;

  public SaleSearchSalesResponse() {
  }

  public SaleSearchSalesResponse pageCurrent(Integer pageCurrent) {
    
    
    
    
    this.pageCurrent = pageCurrent;
    return this;
  }

   /**
   * Get pageCurrent
   * @return pageCurrent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getPageCurrent() {
    return pageCurrent;
  }


  public void setPageCurrent(Integer pageCurrent) {
    
    
    
    this.pageCurrent = pageCurrent;
  }


  public SaleSearchSalesResponse pageCurrentResults(Integer pageCurrentResults) {
    
    
    
    
    this.pageCurrentResults = pageCurrentResults;
    return this;
  }

   /**
   * Get pageCurrentResults
   * @return pageCurrentResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getPageCurrentResults() {
    return pageCurrentResults;
  }


  public void setPageCurrentResults(Integer pageCurrentResults) {
    
    
    
    this.pageCurrentResults = pageCurrentResults;
  }


  public SaleSearchSalesResponse pageTotal(Integer pageTotal) {
    
    
    
    
    this.pageTotal = pageTotal;
    return this;
  }

   /**
   * Get pageTotal
   * @return pageTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getPageTotal() {
    return pageTotal;
  }


  public void setPageTotal(Integer pageTotal) {
    
    
    
    this.pageTotal = pageTotal;
  }


  public SaleSearchSalesResponse pageSize(Integer pageSize) {
    
    
    
    
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getPageSize() {
    return pageSize;
  }


  public void setPageSize(Integer pageSize) {
    
    
    
    this.pageSize = pageSize;
  }


  public SaleSearchSalesResponse totalResults(Integer totalResults) {
    
    
    
    
    this.totalResults = totalResults;
    return this;
  }

   /**
   * Get totalResults
   * @return totalResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getTotalResults() {
    return totalResults;
  }


  public void setTotalResults(Integer totalResults) {
    
    
    
    this.totalResults = totalResults;
  }


  public SaleSearchSalesResponse cardSummary(Object cardSummary) {
    
    
    
    
    this.cardSummary = cardSummary;
    return this;
  }

   /**
   * Get cardSummary
   * @return cardSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCardSummary() {
    return cardSummary;
  }


  public void setCardSummary(Object cardSummary) {
    
    
    
    this.cardSummary = cardSummary;
  }


  public SaleSearchSalesResponse searchResultDTO(List<SaleSearchSalesResponseSearchResultDTOInner> searchResultDTO) {
    
    
    
    
    this.searchResultDTO = searchResultDTO;
    return this;
  }

  public SaleSearchSalesResponse addSearchResultDTOItem(SaleSearchSalesResponseSearchResultDTOInner searchResultDTOItem) {
    if (this.searchResultDTO == null) {
      this.searchResultDTO = new ArrayList<>();
    }
    this.searchResultDTO.add(searchResultDTOItem);
    return this;
  }

   /**
   * Get searchResultDTO
   * @return searchResultDTO
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SaleSearchSalesResponseSearchResultDTOInner> getSearchResultDTO() {
    return searchResultDTO;
  }


  public void setSearchResultDTO(List<SaleSearchSalesResponseSearchResultDTOInner> searchResultDTO) {
    
    
    
    this.searchResultDTO = searchResultDTO;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SaleSearchSalesResponse instance itself
   */
  public SaleSearchSalesResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleSearchSalesResponse saleSearchSalesResponse = (SaleSearchSalesResponse) o;
    return Objects.equals(this.pageCurrent, saleSearchSalesResponse.pageCurrent) &&
        Objects.equals(this.pageCurrentResults, saleSearchSalesResponse.pageCurrentResults) &&
        Objects.equals(this.pageTotal, saleSearchSalesResponse.pageTotal) &&
        Objects.equals(this.pageSize, saleSearchSalesResponse.pageSize) &&
        Objects.equals(this.totalResults, saleSearchSalesResponse.totalResults) &&
        Objects.equals(this.cardSummary, saleSearchSalesResponse.cardSummary) &&
        Objects.equals(this.searchResultDTO, saleSearchSalesResponse.searchResultDTO)&&
        Objects.equals(this.additionalProperties, saleSearchSalesResponse.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageCurrent, pageCurrentResults, pageTotal, pageSize, totalResults, cardSummary, searchResultDTO, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleSearchSalesResponse {\n");
    sb.append("    pageCurrent: ").append(toIndentedString(pageCurrent)).append("\n");
    sb.append("    pageCurrentResults: ").append(toIndentedString(pageCurrentResults)).append("\n");
    sb.append("    pageTotal: ").append(toIndentedString(pageTotal)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    totalResults: ").append(toIndentedString(totalResults)).append("\n");
    sb.append("    cardSummary: ").append(toIndentedString(cardSummary)).append("\n");
    sb.append("    searchResultDTO: ").append(toIndentedString(searchResultDTO)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pageCurrent");
    openapiFields.add("pageCurrentResults");
    openapiFields.add("pageTotal");
    openapiFields.add("pageSize");
    openapiFields.add("totalResults");
    openapiFields.add("cardSummary");
    openapiFields.add("searchResultDTO");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SaleSearchSalesResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SaleSearchSalesResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SaleSearchSalesResponse is not found in the empty JSON string", SaleSearchSalesResponse.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("searchResultDTO") != null && !jsonObj.get("searchResultDTO").isJsonNull()) {
        JsonArray jsonArraysearchResultDTO = jsonObj.getAsJsonArray("searchResultDTO");
        if (jsonArraysearchResultDTO != null) {
          // ensure the json data is an array
          if (!jsonObj.get("searchResultDTO").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `searchResultDTO` to be an array in the JSON string but got `%s`", jsonObj.get("searchResultDTO").toString()));
          }

          // validate the optional field `searchResultDTO` (array)
          for (int i = 0; i < jsonArraysearchResultDTO.size(); i++) {
            SaleSearchSalesResponseSearchResultDTOInner.validateJsonObject(jsonArraysearchResultDTO.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SaleSearchSalesResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SaleSearchSalesResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SaleSearchSalesResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SaleSearchSalesResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SaleSearchSalesResponse>() {
           @Override
           public void write(JsonWriter out, SaleSearchSalesResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SaleSearchSalesResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SaleSearchSalesResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SaleSearchSalesResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SaleSearchSalesResponse
  * @throws IOException if the JSON string is invalid with respect to SaleSearchSalesResponse
  */
  public static SaleSearchSalesResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SaleSearchSalesResponse.class);
  }

 /**
  * Convert an instance of SaleSearchSalesResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

