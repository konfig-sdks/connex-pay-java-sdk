/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TransactionCreateAchCreditPaymentResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TransactionCreateAchCreditPaymentResponse {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchantId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_INCOMING_TRANSACTION_CODE = "incomingTransactionCode";
  @SerializedName(SERIALIZED_NAME_INCOMING_TRANSACTION_CODE)
  private String incomingTransactionCode;

  public static final String SERIALIZED_NAME_PAYMENT_ID = "paymentId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_ID)
  private String paymentId;

  public static final String SERIALIZED_NAME_IS_CREDIT = "isCredit";
  @SerializedName(SERIALIZED_NAME_IS_CREDIT)
  private Boolean isCredit = true;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Integer amount = 0;

  public static final String SERIALIZED_NAME_PAYEE_NAME = "payeeName";
  @SerializedName(SERIALIZED_NAME_PAYEE_NAME)
  private String payeeName;

  public static final String SERIALIZED_NAME_PAYMENT_STATUS = "paymentStatus";
  @SerializedName(SERIALIZED_NAME_PAYMENT_STATUS)
  private String paymentStatus;

  public static final String SERIALIZED_NAME_SCHEDULE_DATE = "scheduleDate";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_DATE)
  private String scheduleDate;

  public static final String SERIALIZED_NAME_RECEIPT_DATE = "receiptDate";
  @SerializedName(SERIALIZED_NAME_RECEIPT_DATE)
  private String receiptDate;

  public static final String SERIALIZED_NAME_PROCESSING_DATE = "processingDate";
  @SerializedName(SERIALIZED_NAME_PROCESSING_DATE)
  private Object processingDate = null;

  public TransactionCreateAchCreditPaymentResponse() {
  }

  public TransactionCreateAchCreditPaymentResponse description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ACH Test", value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public TransactionCreateAchCreditPaymentResponse merchantId(String merchantId) {
    
    
    
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1818a55e-8541-4bfe-a288-bad870afbe1d", value = "")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    
    
    
    this.merchantId = merchantId;
  }


  public TransactionCreateAchCreditPaymentResponse incomingTransactionCode(String incomingTransactionCode) {
    
    
    
    
    this.incomingTransactionCode = incomingTransactionCode;
    return this;
  }

   /**
   * Get incomingTransactionCode
   * @return incomingTransactionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "511C171637487375170935405", value = "")

  public String getIncomingTransactionCode() {
    return incomingTransactionCode;
  }


  public void setIncomingTransactionCode(String incomingTransactionCode) {
    
    
    
    this.incomingTransactionCode = incomingTransactionCode;
  }


  public TransactionCreateAchCreditPaymentResponse paymentId(String paymentId) {
    
    
    
    
    this.paymentId = paymentId;
    return this;
  }

   /**
   * Get paymentId
   * @return paymentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6bd251b4-8dfd-4478-9e2e-41390a59687f", value = "")

  public String getPaymentId() {
    return paymentId;
  }


  public void setPaymentId(String paymentId) {
    
    
    
    this.paymentId = paymentId;
  }


  public TransactionCreateAchCreditPaymentResponse isCredit(Boolean isCredit) {
    
    
    
    
    this.isCredit = isCredit;
    return this;
  }

   /**
   * Get isCredit
   * @return isCredit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getIsCredit() {
    return isCredit;
  }


  public void setIsCredit(Boolean isCredit) {
    
    
    
    this.isCredit = isCredit;
  }


  public TransactionCreateAchCreditPaymentResponse amount(Integer amount) {
    
    
    
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "")

  public Integer getAmount() {
    return amount;
  }


  public void setAmount(Integer amount) {
    
    
    
    this.amount = amount;
  }


  public TransactionCreateAchCreditPaymentResponse payeeName(String payeeName) {
    
    
    
    
    this.payeeName = payeeName;
    return this;
  }

   /**
   * Get payeeName
   * @return payeeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Ultra Merchant LLC", value = "")

  public String getPayeeName() {
    return payeeName;
  }


  public void setPayeeName(String payeeName) {
    
    
    
    this.payeeName = payeeName;
  }


  public TransactionCreateAchCreditPaymentResponse paymentStatus(String paymentStatus) {
    
    
    
    
    this.paymentStatus = paymentStatus;
    return this;
  }

   /**
   * Get paymentStatus
   * @return paymentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NotYetProcessed", value = "")

  public String getPaymentStatus() {
    return paymentStatus;
  }


  public void setPaymentStatus(String paymentStatus) {
    
    
    
    this.paymentStatus = paymentStatus;
  }


  public TransactionCreateAchCreditPaymentResponse scheduleDate(String scheduleDate) {
    
    
    
    
    this.scheduleDate = scheduleDate;
    return this;
  }

   /**
   * Get scheduleDate
   * @return scheduleDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-02-12T00:00:00", value = "")

  public String getScheduleDate() {
    return scheduleDate;
  }


  public void setScheduleDate(String scheduleDate) {
    
    
    
    this.scheduleDate = scheduleDate;
  }


  public TransactionCreateAchCreditPaymentResponse receiptDate(String receiptDate) {
    
    
    
    
    this.receiptDate = receiptDate;
    return this;
  }

   /**
   * Get receiptDate
   * @return receiptDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-02-12T00:00:00", value = "")

  public String getReceiptDate() {
    return receiptDate;
  }


  public void setReceiptDate(String receiptDate) {
    
    
    
    this.receiptDate = receiptDate;
  }


  public TransactionCreateAchCreditPaymentResponse processingDate(Object processingDate) {
    
    
    
    
    this.processingDate = processingDate;
    return this;
  }

   /**
   * Get processingDate
   * @return processingDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getProcessingDate() {
    return processingDate;
  }


  public void setProcessingDate(Object processingDate) {
    
    
    
    this.processingDate = processingDate;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TransactionCreateAchCreditPaymentResponse instance itself
   */
  public TransactionCreateAchCreditPaymentResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionCreateAchCreditPaymentResponse transactionCreateAchCreditPaymentResponse = (TransactionCreateAchCreditPaymentResponse) o;
    return Objects.equals(this.description, transactionCreateAchCreditPaymentResponse.description) &&
        Objects.equals(this.merchantId, transactionCreateAchCreditPaymentResponse.merchantId) &&
        Objects.equals(this.incomingTransactionCode, transactionCreateAchCreditPaymentResponse.incomingTransactionCode) &&
        Objects.equals(this.paymentId, transactionCreateAchCreditPaymentResponse.paymentId) &&
        Objects.equals(this.isCredit, transactionCreateAchCreditPaymentResponse.isCredit) &&
        Objects.equals(this.amount, transactionCreateAchCreditPaymentResponse.amount) &&
        Objects.equals(this.payeeName, transactionCreateAchCreditPaymentResponse.payeeName) &&
        Objects.equals(this.paymentStatus, transactionCreateAchCreditPaymentResponse.paymentStatus) &&
        Objects.equals(this.scheduleDate, transactionCreateAchCreditPaymentResponse.scheduleDate) &&
        Objects.equals(this.receiptDate, transactionCreateAchCreditPaymentResponse.receiptDate) &&
        Objects.equals(this.processingDate, transactionCreateAchCreditPaymentResponse.processingDate)&&
        Objects.equals(this.additionalProperties, transactionCreateAchCreditPaymentResponse.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, merchantId, incomingTransactionCode, paymentId, isCredit, amount, payeeName, paymentStatus, scheduleDate, receiptDate, processingDate, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionCreateAchCreditPaymentResponse {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    incomingTransactionCode: ").append(toIndentedString(incomingTransactionCode)).append("\n");
    sb.append("    paymentId: ").append(toIndentedString(paymentId)).append("\n");
    sb.append("    isCredit: ").append(toIndentedString(isCredit)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    payeeName: ").append(toIndentedString(payeeName)).append("\n");
    sb.append("    paymentStatus: ").append(toIndentedString(paymentStatus)).append("\n");
    sb.append("    scheduleDate: ").append(toIndentedString(scheduleDate)).append("\n");
    sb.append("    receiptDate: ").append(toIndentedString(receiptDate)).append("\n");
    sb.append("    processingDate: ").append(toIndentedString(processingDate)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("merchantId");
    openapiFields.add("incomingTransactionCode");
    openapiFields.add("paymentId");
    openapiFields.add("isCredit");
    openapiFields.add("amount");
    openapiFields.add("payeeName");
    openapiFields.add("paymentStatus");
    openapiFields.add("scheduleDate");
    openapiFields.add("receiptDate");
    openapiFields.add("processingDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TransactionCreateAchCreditPaymentResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TransactionCreateAchCreditPaymentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TransactionCreateAchCreditPaymentResponse is not found in the empty JSON string", TransactionCreateAchCreditPaymentResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("merchantId") != null && !jsonObj.get("merchantId").isJsonNull()) && !jsonObj.get("merchantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantId").toString()));
      }
      if ((jsonObj.get("incomingTransactionCode") != null && !jsonObj.get("incomingTransactionCode").isJsonNull()) && !jsonObj.get("incomingTransactionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incomingTransactionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incomingTransactionCode").toString()));
      }
      if ((jsonObj.get("paymentId") != null && !jsonObj.get("paymentId").isJsonNull()) && !jsonObj.get("paymentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentId").toString()));
      }
      if ((jsonObj.get("payeeName") != null && !jsonObj.get("payeeName").isJsonNull()) && !jsonObj.get("payeeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payeeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payeeName").toString()));
      }
      if ((jsonObj.get("paymentStatus") != null && !jsonObj.get("paymentStatus").isJsonNull()) && !jsonObj.get("paymentStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentStatus").toString()));
      }
      if ((jsonObj.get("scheduleDate") != null && !jsonObj.get("scheduleDate").isJsonNull()) && !jsonObj.get("scheduleDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scheduleDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scheduleDate").toString()));
      }
      if ((jsonObj.get("receiptDate") != null && !jsonObj.get("receiptDate").isJsonNull()) && !jsonObj.get("receiptDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiptDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiptDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TransactionCreateAchCreditPaymentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TransactionCreateAchCreditPaymentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TransactionCreateAchCreditPaymentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TransactionCreateAchCreditPaymentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<TransactionCreateAchCreditPaymentResponse>() {
           @Override
           public void write(JsonWriter out, TransactionCreateAchCreditPaymentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TransactionCreateAchCreditPaymentResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TransactionCreateAchCreditPaymentResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TransactionCreateAchCreditPaymentResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TransactionCreateAchCreditPaymentResponse
  * @throws IOException if the JSON string is invalid with respect to TransactionCreateAchCreditPaymentResponse
  */
  public static TransactionCreateAchCreditPaymentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TransactionCreateAchCreditPaymentResponse.class);
  }

 /**
  * Convert an instance of TransactionCreateAchCreditPaymentResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

