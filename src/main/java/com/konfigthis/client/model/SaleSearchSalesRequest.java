/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SaleSearchSalesRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SaleSearchSalesRequest {
  public static final String SERIALIZED_NAME_MERCHANT_GUID = "MerchantGuid";
  @SerializedName(SERIALIZED_NAME_MERCHANT_GUID)
  private String merchantGuid = "Mandatory";

  public static final String SERIALIZED_NAME_AMOUNT_FROM = "AmountFrom";
  @SerializedName(SERIALIZED_NAME_AMOUNT_FROM)
  private Float amountFrom;

  public static final String SERIALIZED_NAME_AMOUNT_TO = "AmountTo";
  @SerializedName(SERIALIZED_NAME_AMOUNT_TO)
  private Float amountTo;

  public static final String SERIALIZED_NAME_CARD_HOLDER_NAME = "CardHolderName";
  @SerializedName(SERIALIZED_NAME_CARD_HOLDER_NAME)
  private String cardHolderName = "Optional";

  public static final String SERIALIZED_NAME_CARD_LAST_FOUR = "CardLastFour";
  @SerializedName(SERIALIZED_NAME_CARD_LAST_FOUR)
  private String cardLastFour = "Optional";

  public static final String SERIALIZED_NAME_CARD_TYPE = "CardType";
  @SerializedName(SERIALIZED_NAME_CARD_TYPE)
  private String cardType = "Optional";

  public static final String SERIALIZED_NAME_INVOICE_NUMBER = "InvoiceNumber";
  @SerializedName(SERIALIZED_NAME_INVOICE_NUMBER)
  private Integer invoiceNumber;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "OrderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber = "Optional";

  public static final String SERIALIZED_NAME_ORDER_DATE_FROM = "OrderDateFrom";
  @SerializedName(SERIALIZED_NAME_ORDER_DATE_FROM)
  private LocalDate orderDateFrom;

  public static final String SERIALIZED_NAME_ORDER_DATE_TO = "OrderDateTo";
  @SerializedName(SERIALIZED_NAME_ORDER_DATE_TO)
  private LocalDate orderDateTo;

  public static final String SERIALIZED_NAME_TIME_STAMP_FROM = "TimeStampFrom";
  @SerializedName(SERIALIZED_NAME_TIME_STAMP_FROM)
  private LocalDate timeStampFrom;

  public static final String SERIALIZED_NAME_TIME_STAMP_TO = "TimeStampTo";
  @SerializedName(SERIALIZED_NAME_TIME_STAMP_TO)
  private LocalDate timeStampTo;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status = "Optional";

  public static final String SERIALIZED_NAME_MERCHANT_CUSTOMER_ID = "MerchantCustomerId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_CUSTOMER_ID)
  private String merchantCustomerId = "Optional";

  public static final String SERIALIZED_NAME_ACTIVATED = "Activated";
  @SerializedName(SERIALIZED_NAME_ACTIVATED)
  private Boolean activated = false;

  public static final String SERIALIZED_NAME_ACTIVATION_DATE_FROM = "ActivationDateFrom";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_DATE_FROM)
  private LocalDate activationDateFrom;

  public static final String SERIALIZED_NAME_ACTIVATION_DATE_TO = "ActivationDateTo";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_DATE_TO)
  private LocalDate activationDateTo;

  public SaleSearchSalesRequest() {
  }

  public SaleSearchSalesRequest merchantGuid(String merchantGuid) {
    
    
    
    
    this.merchantGuid = merchantGuid;
    return this;
  }

   /**
   * Merchant’s Guid.
   * @return merchantGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Mandatory", value = "Merchant’s Guid.")

  public String getMerchantGuid() {
    return merchantGuid;
  }


  public void setMerchantGuid(String merchantGuid) {
    
    
    
    this.merchantGuid = merchantGuid;
  }


  public SaleSearchSalesRequest amountFrom(Float amountFrom) {
    
    
    
    
    this.amountFrom = amountFrom;
    return this;
  }

   /**
   * Amount of the transaction. Min. amt.: $0.50
   * @return amountFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount of the transaction. Min. amt.: $0.50")

  public Float getAmountFrom() {
    return amountFrom;
  }


  public void setAmountFrom(Float amountFrom) {
    
    
    
    this.amountFrom = amountFrom;
  }


  public SaleSearchSalesRequest amountTo(Float amountTo) {
    
    
    
    
    this.amountTo = amountTo;
    return this;
  }

   /**
   * Amount of the transaction. Min. amt.: $0.50
   * @return amountTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount of the transaction. Min. amt.: $0.50")

  public Float getAmountTo() {
    return amountTo;
  }


  public void setAmountTo(Float amountTo) {
    
    
    
    this.amountTo = amountTo;
  }


  public SaleSearchSalesRequest cardHolderName(String cardHolderName) {
    
    
    
    
    this.cardHolderName = cardHolderName;
    return this;
  }

   /**
   * Cardholder’s name.
   * @return cardHolderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Optional", value = "Cardholder’s name.")

  public String getCardHolderName() {
    return cardHolderName;
  }


  public void setCardHolderName(String cardHolderName) {
    
    
    
    this.cardHolderName = cardHolderName;
  }


  public SaleSearchSalesRequest cardLastFour(String cardLastFour) {
    
    
    
    
    this.cardLastFour = cardLastFour;
    return this;
  }

   /**
   * Card last four number.
   * @return cardLastFour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Optional", value = "Card last four number.")

  public String getCardLastFour() {
    return cardLastFour;
  }


  public void setCardLastFour(String cardLastFour) {
    
    
    
    this.cardLastFour = cardLastFour;
  }


  public SaleSearchSalesRequest cardType(String cardType) {
    
    
    
    
    this.cardType = cardType;
    return this;
  }

   /**
   * Card type.
   * @return cardType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Optional", value = "Card type.")

  public String getCardType() {
    return cardType;
  }


  public void setCardType(String cardType) {
    
    
    
    this.cardType = cardType;
  }


  public SaleSearchSalesRequest invoiceNumber(Integer invoiceNumber) {
    
    
    
    
    this.invoiceNumber = invoiceNumber;
    return this;
  }

   /**
   * Sale’s InvoiceNumber.
   * @return invoiceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sale’s InvoiceNumber.")

  public Integer getInvoiceNumber() {
    return invoiceNumber;
  }


  public void setInvoiceNumber(Integer invoiceNumber) {
    
    
    
    this.invoiceNumber = invoiceNumber;
  }


  public SaleSearchSalesRequest orderNumber(String orderNumber) {
    
    
    
    
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Sale’s order number. Length &#x3D; 17.
   * @return orderNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Optional", value = "Sale’s order number. Length = 17.")

  public String getOrderNumber() {
    return orderNumber;
  }


  public void setOrderNumber(String orderNumber) {
    
    
    
    this.orderNumber = orderNumber;
  }


  public SaleSearchSalesRequest orderDateFrom(LocalDate orderDateFrom) {
    
    
    
    
    this.orderDateFrom = orderDateFrom;
    return this;
  }

   /**
   * Sale’s order Date.
   * @return orderDateFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sale’s order Date.")

  public LocalDate getOrderDateFrom() {
    return orderDateFrom;
  }


  public void setOrderDateFrom(LocalDate orderDateFrom) {
    
    
    
    this.orderDateFrom = orderDateFrom;
  }


  public SaleSearchSalesRequest orderDateTo(LocalDate orderDateTo) {
    
    
    
    
    this.orderDateTo = orderDateTo;
    return this;
  }

   /**
   * Sale’s order Date.
   * @return orderDateTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sale’s order Date.")

  public LocalDate getOrderDateTo() {
    return orderDateTo;
  }


  public void setOrderDateTo(LocalDate orderDateTo) {
    
    
    
    this.orderDateTo = orderDateTo;
  }


  public SaleSearchSalesRequest timeStampFrom(LocalDate timeStampFrom) {
    
    
    
    
    this.timeStampFrom = timeStampFrom;
    return this;
  }

   /**
   * Sale’s TimeStamp.
   * @return timeStampFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sale’s TimeStamp.")

  public LocalDate getTimeStampFrom() {
    return timeStampFrom;
  }


  public void setTimeStampFrom(LocalDate timeStampFrom) {
    
    
    
    this.timeStampFrom = timeStampFrom;
  }


  public SaleSearchSalesRequest timeStampTo(LocalDate timeStampTo) {
    
    
    
    
    this.timeStampTo = timeStampTo;
    return this;
  }

   /**
   * Sale’s TimeStamp.
   * @return timeStampTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sale’s TimeStamp.")

  public LocalDate getTimeStampTo() {
    return timeStampTo;
  }


  public void setTimeStampTo(LocalDate timeStampTo) {
    
    
    
    this.timeStampTo = timeStampTo;
  }


  public SaleSearchSalesRequest status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Sale’s status. Allowed values:  1. Transaction - Approved 2. Transaction - Declined 3. Transaction - Created - Local 4. Transaction - Created - Error: Processor not reached 5. Transaction - Processor Error 6. Transaction - Approved - Warning
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Optional", value = "Sale’s status. Allowed values:  1. Transaction - Approved 2. Transaction - Declined 3. Transaction - Created - Local 4. Transaction - Created - Error: Processor not reached 5. Transaction - Processor Error 6. Transaction - Approved - Warning")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public SaleSearchSalesRequest merchantCustomerId(String merchantCustomerId) {
    
    
    
    
    this.merchantCustomerId = merchantCustomerId;
    return this;
  }

   /**
   * Merchant Customer Id.
   * @return merchantCustomerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Optional", value = "Merchant Customer Id.")

  public String getMerchantCustomerId() {
    return merchantCustomerId;
  }


  public void setMerchantCustomerId(String merchantCustomerId) {
    
    
    
    this.merchantCustomerId = merchantCustomerId;
  }


  public SaleSearchSalesRequest activated(Boolean activated) {
    
    
    
    
    this.activated = activated;
    return this;
  }

   /**
   * Delayed Activation Sales to be included or not
   * @return activated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Delayed Activation Sales to be included or not")

  public Boolean getActivated() {
    return activated;
  }


  public void setActivated(Boolean activated) {
    
    
    
    this.activated = activated;
  }


  public SaleSearchSalesRequest activationDateFrom(LocalDate activationDateFrom) {
    
    
    
    
    this.activationDateFrom = activationDateFrom;
    return this;
  }

   /**
   * Activation Start Date. This field is applicable only when Activated flag is set to true.
   * @return activationDateFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Activation Start Date. This field is applicable only when Activated flag is set to true.")

  public LocalDate getActivationDateFrom() {
    return activationDateFrom;
  }


  public void setActivationDateFrom(LocalDate activationDateFrom) {
    
    
    
    this.activationDateFrom = activationDateFrom;
  }


  public SaleSearchSalesRequest activationDateTo(LocalDate activationDateTo) {
    
    
    
    
    this.activationDateTo = activationDateTo;
    return this;
  }

   /**
   * Activation End Date. This field is applicable only when Activated flag is set to true.
   * @return activationDateTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Activation End Date. This field is applicable only when Activated flag is set to true.")

  public LocalDate getActivationDateTo() {
    return activationDateTo;
  }


  public void setActivationDateTo(LocalDate activationDateTo) {
    
    
    
    this.activationDateTo = activationDateTo;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SaleSearchSalesRequest instance itself
   */
  public SaleSearchSalesRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleSearchSalesRequest saleSearchSalesRequest = (SaleSearchSalesRequest) o;
    return Objects.equals(this.merchantGuid, saleSearchSalesRequest.merchantGuid) &&
        Objects.equals(this.amountFrom, saleSearchSalesRequest.amountFrom) &&
        Objects.equals(this.amountTo, saleSearchSalesRequest.amountTo) &&
        Objects.equals(this.cardHolderName, saleSearchSalesRequest.cardHolderName) &&
        Objects.equals(this.cardLastFour, saleSearchSalesRequest.cardLastFour) &&
        Objects.equals(this.cardType, saleSearchSalesRequest.cardType) &&
        Objects.equals(this.invoiceNumber, saleSearchSalesRequest.invoiceNumber) &&
        Objects.equals(this.orderNumber, saleSearchSalesRequest.orderNumber) &&
        Objects.equals(this.orderDateFrom, saleSearchSalesRequest.orderDateFrom) &&
        Objects.equals(this.orderDateTo, saleSearchSalesRequest.orderDateTo) &&
        Objects.equals(this.timeStampFrom, saleSearchSalesRequest.timeStampFrom) &&
        Objects.equals(this.timeStampTo, saleSearchSalesRequest.timeStampTo) &&
        Objects.equals(this.status, saleSearchSalesRequest.status) &&
        Objects.equals(this.merchantCustomerId, saleSearchSalesRequest.merchantCustomerId) &&
        Objects.equals(this.activated, saleSearchSalesRequest.activated) &&
        Objects.equals(this.activationDateFrom, saleSearchSalesRequest.activationDateFrom) &&
        Objects.equals(this.activationDateTo, saleSearchSalesRequest.activationDateTo)&&
        Objects.equals(this.additionalProperties, saleSearchSalesRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantGuid, amountFrom, amountTo, cardHolderName, cardLastFour, cardType, invoiceNumber, orderNumber, orderDateFrom, orderDateTo, timeStampFrom, timeStampTo, status, merchantCustomerId, activated, activationDateFrom, activationDateTo, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleSearchSalesRequest {\n");
    sb.append("    merchantGuid: ").append(toIndentedString(merchantGuid)).append("\n");
    sb.append("    amountFrom: ").append(toIndentedString(amountFrom)).append("\n");
    sb.append("    amountTo: ").append(toIndentedString(amountTo)).append("\n");
    sb.append("    cardHolderName: ").append(toIndentedString(cardHolderName)).append("\n");
    sb.append("    cardLastFour: ").append(toIndentedString(cardLastFour)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    orderDateFrom: ").append(toIndentedString(orderDateFrom)).append("\n");
    sb.append("    orderDateTo: ").append(toIndentedString(orderDateTo)).append("\n");
    sb.append("    timeStampFrom: ").append(toIndentedString(timeStampFrom)).append("\n");
    sb.append("    timeStampTo: ").append(toIndentedString(timeStampTo)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    merchantCustomerId: ").append(toIndentedString(merchantCustomerId)).append("\n");
    sb.append("    activated: ").append(toIndentedString(activated)).append("\n");
    sb.append("    activationDateFrom: ").append(toIndentedString(activationDateFrom)).append("\n");
    sb.append("    activationDateTo: ").append(toIndentedString(activationDateTo)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MerchantGuid");
    openapiFields.add("AmountFrom");
    openapiFields.add("AmountTo");
    openapiFields.add("CardHolderName");
    openapiFields.add("CardLastFour");
    openapiFields.add("CardType");
    openapiFields.add("InvoiceNumber");
    openapiFields.add("OrderNumber");
    openapiFields.add("OrderDateFrom");
    openapiFields.add("OrderDateTo");
    openapiFields.add("TimeStampFrom");
    openapiFields.add("TimeStampTo");
    openapiFields.add("Status");
    openapiFields.add("MerchantCustomerId");
    openapiFields.add("Activated");
    openapiFields.add("ActivationDateFrom");
    openapiFields.add("ActivationDateTo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SaleSearchSalesRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SaleSearchSalesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SaleSearchSalesRequest is not found in the empty JSON string", SaleSearchSalesRequest.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("MerchantGuid") != null && !jsonObj.get("MerchantGuid").isJsonNull()) && !jsonObj.get("MerchantGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MerchantGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MerchantGuid").toString()));
      }
      if ((jsonObj.get("CardHolderName") != null && !jsonObj.get("CardHolderName").isJsonNull()) && !jsonObj.get("CardHolderName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CardHolderName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CardHolderName").toString()));
      }
      if ((jsonObj.get("CardLastFour") != null && !jsonObj.get("CardLastFour").isJsonNull()) && !jsonObj.get("CardLastFour").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CardLastFour` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CardLastFour").toString()));
      }
      if ((jsonObj.get("CardType") != null && !jsonObj.get("CardType").isJsonNull()) && !jsonObj.get("CardType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CardType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CardType").toString()));
      }
      if ((jsonObj.get("OrderNumber") != null && !jsonObj.get("OrderNumber").isJsonNull()) && !jsonObj.get("OrderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OrderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OrderNumber").toString()));
      }
      if ((jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      if ((jsonObj.get("MerchantCustomerId") != null && !jsonObj.get("MerchantCustomerId").isJsonNull()) && !jsonObj.get("MerchantCustomerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MerchantCustomerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MerchantCustomerId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SaleSearchSalesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SaleSearchSalesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SaleSearchSalesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SaleSearchSalesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SaleSearchSalesRequest>() {
           @Override
           public void write(JsonWriter out, SaleSearchSalesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SaleSearchSalesRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SaleSearchSalesRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SaleSearchSalesRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SaleSearchSalesRequest
  * @throws IOException if the JSON string is invalid with respect to SaleSearchSalesRequest
  */
  public static SaleSearchSalesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SaleSearchSalesRequest.class);
  }

 /**
  * Convert an instance of SaleSearchSalesRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

