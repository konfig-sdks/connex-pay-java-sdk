/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.SaleCreateTransaction201ResponseBankAccount;
import com.konfigthis.client.model.SaleCreateTransaction201ResponseConnexPayTransaction;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SaleCreateTransaction201Response
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SaleCreateTransaction201Response {
  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_BATCH_STATUS = "batchStatus";
  @SerializedName(SERIALIZED_NAME_BATCH_STATUS)
  private String batchStatus;

  public static final String SERIALIZED_NAME_TIME_STAMP = "timeStamp";
  @SerializedName(SERIALIZED_NAME_TIME_STAMP)
  private String timeStamp;

  public static final String SERIALIZED_NAME_DEVICE_GUID = "deviceGuid";
  @SerializedName(SERIALIZED_NAME_DEVICE_GUID)
  private String deviceGuid;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount = 0d;

  public static final String SERIALIZED_NAME_ACTIVATED = "activated";
  @SerializedName(SERIALIZED_NAME_ACTIVATED)
  private Boolean activated = true;

  public static final String SERIALIZED_NAME_TENDER_TYPE = "tenderType";
  @SerializedName(SERIALIZED_NAME_TENDER_TYPE)
  private String tenderType;

  public static final String SERIALIZED_NAME_EFFECTIVE_AMOUNT = "effectiveAmount";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_AMOUNT)
  private Double effectiveAmount = 0d;

  public static final String SERIALIZED_NAME_PURCHASE_ACTIVATION_DATE = "purchaseActivationDate";
  @SerializedName(SERIALIZED_NAME_PURCHASE_ACTIVATION_DATE)
  private String purchaseActivationDate;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "orderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_CARD_DATA_SOURCE = "cardDataSource";
  @SerializedName(SERIALIZED_NAME_CARD_DATA_SOURCE)
  private String cardDataSource;

  public static final String SERIALIZED_NAME_CUSTOMER_I_D = "customerID";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_I_D)
  private String customerID;

  public static final String SERIALIZED_NAME_BATCH_GUID = "batchGuid";
  @SerializedName(SERIALIZED_NAME_BATCH_GUID)
  private String batchGuid;

  public static final String SERIALIZED_NAME_CONNEX_PAY_TRANSACTION = "connexPayTransaction";
  @SerializedName(SERIALIZED_NAME_CONNEX_PAY_TRANSACTION)
  private SaleCreateTransaction201ResponseConnexPayTransaction connexPayTransaction;

  public static final String SERIALIZED_NAME_RISK_PROCESSING_ONLY = "riskProcessingOnly";
  @SerializedName(SERIALIZED_NAME_RISK_PROCESSING_ONLY)
  private Boolean riskProcessingOnly = true;

  public static final String SERIALIZED_NAME_PROCESSOR_STATUS_CODE = "processorStatusCode";
  @SerializedName(SERIALIZED_NAME_PROCESSOR_STATUS_CODE)
  private String processorStatusCode;

  public static final String SERIALIZED_NAME_PROCESSOR_RESPONSE_MESSAGE = "processorResponseMessage";
  @SerializedName(SERIALIZED_NAME_PROCESSOR_RESPONSE_MESSAGE)
  private String processorResponseMessage;

  public static final String SERIALIZED_NAME_WAS_PROCESSED = "wasProcessed";
  @SerializedName(SERIALIZED_NAME_WAS_PROCESSED)
  private Boolean wasProcessed = true;

  public static final String SERIALIZED_NAME_REF_NUMBER = "refNumber";
  @SerializedName(SERIALIZED_NAME_REF_NUMBER)
  private String refNumber;

  public static final String SERIALIZED_NAME_CUSTOMER_RECEIPT = "customerReceipt";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_RECEIPT)
  private String customerReceipt;

  public static final String SERIALIZED_NAME_STATEMENT_DESCRIPTION = "statementDescription";
  @SerializedName(SERIALIZED_NAME_STATEMENT_DESCRIPTION)
  private String statementDescription;

  public static final String SERIALIZED_NAME_GENERATED_BY = "generatedBy";
  @SerializedName(SERIALIZED_NAME_GENERATED_BY)
  private String generatedBy;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT = "bankAccount";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT)
  private SaleCreateTransaction201ResponseBankAccount bankAccount;

  public static final String SERIALIZED_NAME_SEQUENCE_NUMBER = "sequenceNumber";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_NUMBER)
  private String sequenceNumber;

  public static final String SERIALIZED_NAME_ADDRESS_VERIFICATION_RESULT = "addressVerificationResult";
  @SerializedName(SERIALIZED_NAME_ADDRESS_VERIFICATION_RESULT)
  private String addressVerificationResult;

  public static final String SERIALIZED_NAME_CVV_VERIFICATION_RESULT = "cvvVerificationResult";
  @SerializedName(SERIALIZED_NAME_CVV_VERIFICATION_RESULT)
  private String cvvVerificationResult;

  public static final String SERIALIZED_NAME_WALLET_PROVIDER = "walletProvider";
  @SerializedName(SERIALIZED_NAME_WALLET_PROVIDER)
  private Integer walletProvider = 0;

  public static final String SERIALIZED_NAME_INCLUDE_RISK_ANALYSIS = "includeRiskAnalysis";
  @SerializedName(SERIALIZED_NAME_INCLUDE_RISK_ANALYSIS)
  private Boolean includeRiskAnalysis = true;

  public static final String SERIALIZED_NAME_IS_FROM_ISSUE_LITE = "isFromIssueLite";
  @SerializedName(SERIALIZED_NAME_IS_FROM_ISSUE_LITE)
  private Boolean isFromIssueLite = true;

  public static final String SERIALIZED_NAME_REMAINING_AMOUNT = "remainingAmount";
  @SerializedName(SERIALIZED_NAME_REMAINING_AMOUNT)
  private Double remainingAmount = 0d;

  public SaleCreateTransaction201Response() {
  }

  public SaleCreateTransaction201Response guid(String guid) {
    
    
    
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "965a67b0-cd0e-4020-973b-5e0d1b4bd6e2", value = "")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    
    
    
    this.guid = guid;
  }


  public SaleCreateTransaction201Response status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Transaction - Approved", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public SaleCreateTransaction201Response type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Default", value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public SaleCreateTransaction201Response batchStatus(String batchStatus) {
    
    
    
    
    this.batchStatus = batchStatus;
    return this;
  }

   /**
   * Get batchStatus
   * @return batchStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Batch - Open", value = "")

  public String getBatchStatus() {
    return batchStatus;
  }


  public void setBatchStatus(String batchStatus) {
    
    
    
    this.batchStatus = batchStatus;
  }


  public SaleCreateTransaction201Response timeStamp(String timeStamp) {
    
    
    
    
    this.timeStamp = timeStamp;
    return this;
  }

   /**
   * Get timeStamp
   * @return timeStamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-05-09T15:33:12.25-04:00", value = "")

  public String getTimeStamp() {
    return timeStamp;
  }


  public void setTimeStamp(String timeStamp) {
    
    
    
    this.timeStamp = timeStamp;
  }


  public SaleCreateTransaction201Response deviceGuid(String deviceGuid) {
    
    
    
    
    this.deviceGuid = deviceGuid;
    return this;
  }

   /**
   * Get deviceGuid
   * @return deviceGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "f758a448-7780-4b50-93a1-28329e37f94f", value = "")

  public String getDeviceGuid() {
    return deviceGuid;
  }


  public void setDeviceGuid(String deviceGuid) {
    
    
    
    this.deviceGuid = deviceGuid;
  }


  public SaleCreateTransaction201Response amount(Double amount) {
    
    
    
    
    this.amount = amount;
    return this;
  }

  public SaleCreateTransaction201Response amount(Integer amount) {
    
    
    
    
    this.amount = amount.doubleValue();
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.17", value = "")

  public Double getAmount() {
    return amount;
  }


  public void setAmount(Double amount) {
    
    
    
    this.amount = amount;
  }


  public SaleCreateTransaction201Response activated(Boolean activated) {
    
    
    
    
    this.activated = activated;
    return this;
  }

   /**
   * Get activated
   * @return activated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getActivated() {
    return activated;
  }


  public void setActivated(Boolean activated) {
    
    
    
    this.activated = activated;
  }


  public SaleCreateTransaction201Response tenderType(String tenderType) {
    
    
    
    
    this.tenderType = tenderType;
    return this;
  }

   /**
   * Get tenderType
   * @return tenderType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ACH", value = "")

  public String getTenderType() {
    return tenderType;
  }


  public void setTenderType(String tenderType) {
    
    
    
    this.tenderType = tenderType;
  }


  public SaleCreateTransaction201Response effectiveAmount(Double effectiveAmount) {
    
    
    
    
    this.effectiveAmount = effectiveAmount;
    return this;
  }

  public SaleCreateTransaction201Response effectiveAmount(Integer effectiveAmount) {
    
    
    
    
    this.effectiveAmount = effectiveAmount.doubleValue();
    return this;
  }

   /**
   * Get effectiveAmount
   * @return effectiveAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.17", value = "")

  public Double getEffectiveAmount() {
    return effectiveAmount;
  }


  public void setEffectiveAmount(Double effectiveAmount) {
    
    
    
    this.effectiveAmount = effectiveAmount;
  }


  public SaleCreateTransaction201Response purchaseActivationDate(String purchaseActivationDate) {
    
    
    
    
    this.purchaseActivationDate = purchaseActivationDate;
    return this;
  }

   /**
   * Get purchaseActivationDate
   * @return purchaseActivationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-05-09T00:00:00-04:00", value = "")

  public String getPurchaseActivationDate() {
    return purchaseActivationDate;
  }


  public void setPurchaseActivationDate(String purchaseActivationDate) {
    
    
    
    this.purchaseActivationDate = purchaseActivationDate;
  }


  public SaleCreateTransaction201Response orderNumber(String orderNumber) {
    
    
    
    
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Get orderNumber
   * @return orderNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ACH Sale Example", value = "")

  public String getOrderNumber() {
    return orderNumber;
  }


  public void setOrderNumber(String orderNumber) {
    
    
    
    this.orderNumber = orderNumber;
  }


  public SaleCreateTransaction201Response cardDataSource(String cardDataSource) {
    
    
    
    
    this.cardDataSource = cardDataSource;
    return this;
  }

   /**
   * Get cardDataSource
   * @return cardDataSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "INTERNET", value = "")

  public String getCardDataSource() {
    return cardDataSource;
  }


  public void setCardDataSource(String cardDataSource) {
    
    
    
    this.cardDataSource = cardDataSource;
  }


  public SaleCreateTransaction201Response customerID(String customerID) {
    
    
    
    
    this.customerID = customerID;
    return this;
  }

   /**
   * Get customerID
   * @return customerID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CustomerID", value = "")

  public String getCustomerID() {
    return customerID;
  }


  public void setCustomerID(String customerID) {
    
    
    
    this.customerID = customerID;
  }


  public SaleCreateTransaction201Response batchGuid(String batchGuid) {
    
    
    
    
    this.batchGuid = batchGuid;
    return this;
  }

   /**
   * Get batchGuid
   * @return batchGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "c71d0ee6-b595-4792-b1ee-1156d28be132", value = "")

  public String getBatchGuid() {
    return batchGuid;
  }


  public void setBatchGuid(String batchGuid) {
    
    
    
    this.batchGuid = batchGuid;
  }


  public SaleCreateTransaction201Response connexPayTransaction(SaleCreateTransaction201ResponseConnexPayTransaction connexPayTransaction) {
    
    
    
    
    this.connexPayTransaction = connexPayTransaction;
    return this;
  }

   /**
   * Get connexPayTransaction
   * @return connexPayTransaction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SaleCreateTransaction201ResponseConnexPayTransaction getConnexPayTransaction() {
    return connexPayTransaction;
  }


  public void setConnexPayTransaction(SaleCreateTransaction201ResponseConnexPayTransaction connexPayTransaction) {
    
    
    
    this.connexPayTransaction = connexPayTransaction;
  }


  public SaleCreateTransaction201Response riskProcessingOnly(Boolean riskProcessingOnly) {
    
    
    
    
    this.riskProcessingOnly = riskProcessingOnly;
    return this;
  }

   /**
   * Get riskProcessingOnly
   * @return riskProcessingOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getRiskProcessingOnly() {
    return riskProcessingOnly;
  }


  public void setRiskProcessingOnly(Boolean riskProcessingOnly) {
    
    
    
    this.riskProcessingOnly = riskProcessingOnly;
  }


  public SaleCreateTransaction201Response processorStatusCode(String processorStatusCode) {
    
    
    
    
    this.processorStatusCode = processorStatusCode;
    return this;
  }

   /**
   * Get processorStatusCode
   * @return processorStatusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "A0000", value = "")

  public String getProcessorStatusCode() {
    return processorStatusCode;
  }


  public void setProcessorStatusCode(String processorStatusCode) {
    
    
    
    this.processorStatusCode = processorStatusCode;
  }


  public SaleCreateTransaction201Response processorResponseMessage(String processorResponseMessage) {
    
    
    
    
    this.processorResponseMessage = processorResponseMessage;
    return this;
  }

   /**
   * Get processorResponseMessage
   * @return processorResponseMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NotYetProcessed", value = "")

  public String getProcessorResponseMessage() {
    return processorResponseMessage;
  }


  public void setProcessorResponseMessage(String processorResponseMessage) {
    
    
    
    this.processorResponseMessage = processorResponseMessage;
  }


  public SaleCreateTransaction201Response wasProcessed(Boolean wasProcessed) {
    
    
    
    
    this.wasProcessed = wasProcessed;
    return this;
  }

   /**
   * Get wasProcessed
   * @return wasProcessed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getWasProcessed() {
    return wasProcessed;
  }


  public void setWasProcessed(Boolean wasProcessed) {
    
    
    
    this.wasProcessed = wasProcessed;
  }


  public SaleCreateTransaction201Response refNumber(String refNumber) {
    
    
    
    
    this.refNumber = refNumber;
    return this;
  }

   /**
   * Get refNumber
   * @return refNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LC40FTVWZH", value = "")

  public String getRefNumber() {
    return refNumber;
  }


  public void setRefNumber(String refNumber) {
    
    
    
    this.refNumber = refNumber;
  }


  public SaleCreateTransaction201Response customerReceipt(String customerReceipt) {
    
    
    
    
    this.customerReceipt = customerReceipt;
    return this;
  }

   /**
   * Get customerReceipt
   * @return customerReceipt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Test\\nTest Minnesota 55111\\n5/9/2023 12:00:00 AM\\n\\nACH - Sale\\n\\nACCT NBR last four # : **** **** **** **** 1111\\nEntry Mode : MANUAL\\n\\nTRANSACTION ID : 63819243192747\\nInvoice number : Sales Test \\nSubtotal:                      $1.17\\n--------------------------------------\\nTotal:                         $1.17\\n--------------------------------------\\n\\n\\n\\nCUSTOMER ACKNOWLEDGES RECEIPT OF\\nGOODS AND/OR SERVICES IN THE AMOUNT\\nOF THE TOTAL SHOWN HEREON AND AGREES\\nTO PERFORM THE OBLIGATIONS SET FORTH\\nBY THE CUSTOMER`S AGREEMENT WITH THE\\nISSUER\\nAPPROVED\\n\\n\\n\\n\\nCustomer Copy\\n", value = "")

  public String getCustomerReceipt() {
    return customerReceipt;
  }


  public void setCustomerReceipt(String customerReceipt) {
    
    
    
    this.customerReceipt = customerReceipt;
  }


  public SaleCreateTransaction201Response statementDescription(String statementDescription) {
    
    
    
    
    this.statementDescription = statementDescription;
    return this;
  }

   /**
   * Get statementDescription
   * @return statementDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Test", value = "")

  public String getStatementDescription() {
    return statementDescription;
  }


  public void setStatementDescription(String statementDescription) {
    
    
    
    this.statementDescription = statementDescription;
  }


  public SaleCreateTransaction201Response generatedBy(String generatedBy) {
    
    
    
    
    this.generatedBy = generatedBy;
    return this;
  }

   /**
   * Get generatedBy
   * @return generatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Test", value = "")

  public String getGeneratedBy() {
    return generatedBy;
  }


  public void setGeneratedBy(String generatedBy) {
    
    
    
    this.generatedBy = generatedBy;
  }


  public SaleCreateTransaction201Response bankAccount(SaleCreateTransaction201ResponseBankAccount bankAccount) {
    
    
    
    
    this.bankAccount = bankAccount;
    return this;
  }

   /**
   * Get bankAccount
   * @return bankAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SaleCreateTransaction201ResponseBankAccount getBankAccount() {
    return bankAccount;
  }


  public void setBankAccount(SaleCreateTransaction201ResponseBankAccount bankAccount) {
    
    
    
    this.bankAccount = bankAccount;
  }


  public SaleCreateTransaction201Response sequenceNumber(String sequenceNumber) {
    
    
    
    
    this.sequenceNumber = sequenceNumber;
    return this;
  }

   /**
   * Get sequenceNumber
   * @return sequenceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "")

  public String getSequenceNumber() {
    return sequenceNumber;
  }


  public void setSequenceNumber(String sequenceNumber) {
    
    
    
    this.sequenceNumber = sequenceNumber;
  }


  public SaleCreateTransaction201Response addressVerificationResult(String addressVerificationResult) {
    
    
    
    
    this.addressVerificationResult = addressVerificationResult;
    return this;
  }

   /**
   * Get addressVerificationResult
   * @return addressVerificationResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Unavailable", value = "")

  public String getAddressVerificationResult() {
    return addressVerificationResult;
  }


  public void setAddressVerificationResult(String addressVerificationResult) {
    
    
    
    this.addressVerificationResult = addressVerificationResult;
  }


  public SaleCreateTransaction201Response cvvVerificationResult(String cvvVerificationResult) {
    
    
    
    
    this.cvvVerificationResult = cvvVerificationResult;
    return this;
  }

   /**
   * Get cvvVerificationResult
   * @return cvvVerificationResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Unavailable", value = "")

  public String getCvvVerificationResult() {
    return cvvVerificationResult;
  }


  public void setCvvVerificationResult(String cvvVerificationResult) {
    
    
    
    this.cvvVerificationResult = cvvVerificationResult;
  }


  public SaleCreateTransaction201Response walletProvider(Integer walletProvider) {
    
    
    
    
    this.walletProvider = walletProvider;
    return this;
  }

   /**
   * Get walletProvider
   * @return walletProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getWalletProvider() {
    return walletProvider;
  }


  public void setWalletProvider(Integer walletProvider) {
    
    
    
    this.walletProvider = walletProvider;
  }


  public SaleCreateTransaction201Response includeRiskAnalysis(Boolean includeRiskAnalysis) {
    
    
    
    
    this.includeRiskAnalysis = includeRiskAnalysis;
    return this;
  }

   /**
   * Get includeRiskAnalysis
   * @return includeRiskAnalysis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getIncludeRiskAnalysis() {
    return includeRiskAnalysis;
  }


  public void setIncludeRiskAnalysis(Boolean includeRiskAnalysis) {
    
    
    
    this.includeRiskAnalysis = includeRiskAnalysis;
  }


  public SaleCreateTransaction201Response isFromIssueLite(Boolean isFromIssueLite) {
    
    
    
    
    this.isFromIssueLite = isFromIssueLite;
    return this;
  }

   /**
   * Get isFromIssueLite
   * @return isFromIssueLite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getIsFromIssueLite() {
    return isFromIssueLite;
  }


  public void setIsFromIssueLite(Boolean isFromIssueLite) {
    
    
    
    this.isFromIssueLite = isFromIssueLite;
  }


  public SaleCreateTransaction201Response remainingAmount(Double remainingAmount) {
    
    
    
    
    this.remainingAmount = remainingAmount;
    return this;
  }

  public SaleCreateTransaction201Response remainingAmount(Integer remainingAmount) {
    
    
    
    
    this.remainingAmount = remainingAmount.doubleValue();
    return this;
  }

   /**
   * Get remainingAmount
   * @return remainingAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.17", value = "")

  public Double getRemainingAmount() {
    return remainingAmount;
  }


  public void setRemainingAmount(Double remainingAmount) {
    
    
    
    this.remainingAmount = remainingAmount;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SaleCreateTransaction201Response instance itself
   */
  public SaleCreateTransaction201Response putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleCreateTransaction201Response saleCreateTransaction201Response = (SaleCreateTransaction201Response) o;
    return Objects.equals(this.guid, saleCreateTransaction201Response.guid) &&
        Objects.equals(this.status, saleCreateTransaction201Response.status) &&
        Objects.equals(this.type, saleCreateTransaction201Response.type) &&
        Objects.equals(this.batchStatus, saleCreateTransaction201Response.batchStatus) &&
        Objects.equals(this.timeStamp, saleCreateTransaction201Response.timeStamp) &&
        Objects.equals(this.deviceGuid, saleCreateTransaction201Response.deviceGuid) &&
        Objects.equals(this.amount, saleCreateTransaction201Response.amount) &&
        Objects.equals(this.activated, saleCreateTransaction201Response.activated) &&
        Objects.equals(this.tenderType, saleCreateTransaction201Response.tenderType) &&
        Objects.equals(this.effectiveAmount, saleCreateTransaction201Response.effectiveAmount) &&
        Objects.equals(this.purchaseActivationDate, saleCreateTransaction201Response.purchaseActivationDate) &&
        Objects.equals(this.orderNumber, saleCreateTransaction201Response.orderNumber) &&
        Objects.equals(this.cardDataSource, saleCreateTransaction201Response.cardDataSource) &&
        Objects.equals(this.customerID, saleCreateTransaction201Response.customerID) &&
        Objects.equals(this.batchGuid, saleCreateTransaction201Response.batchGuid) &&
        Objects.equals(this.connexPayTransaction, saleCreateTransaction201Response.connexPayTransaction) &&
        Objects.equals(this.riskProcessingOnly, saleCreateTransaction201Response.riskProcessingOnly) &&
        Objects.equals(this.processorStatusCode, saleCreateTransaction201Response.processorStatusCode) &&
        Objects.equals(this.processorResponseMessage, saleCreateTransaction201Response.processorResponseMessage) &&
        Objects.equals(this.wasProcessed, saleCreateTransaction201Response.wasProcessed) &&
        Objects.equals(this.refNumber, saleCreateTransaction201Response.refNumber) &&
        Objects.equals(this.customerReceipt, saleCreateTransaction201Response.customerReceipt) &&
        Objects.equals(this.statementDescription, saleCreateTransaction201Response.statementDescription) &&
        Objects.equals(this.generatedBy, saleCreateTransaction201Response.generatedBy) &&
        Objects.equals(this.bankAccount, saleCreateTransaction201Response.bankAccount) &&
        Objects.equals(this.sequenceNumber, saleCreateTransaction201Response.sequenceNumber) &&
        Objects.equals(this.addressVerificationResult, saleCreateTransaction201Response.addressVerificationResult) &&
        Objects.equals(this.cvvVerificationResult, saleCreateTransaction201Response.cvvVerificationResult) &&
        Objects.equals(this.walletProvider, saleCreateTransaction201Response.walletProvider) &&
        Objects.equals(this.includeRiskAnalysis, saleCreateTransaction201Response.includeRiskAnalysis) &&
        Objects.equals(this.isFromIssueLite, saleCreateTransaction201Response.isFromIssueLite) &&
        Objects.equals(this.remainingAmount, saleCreateTransaction201Response.remainingAmount)&&
        Objects.equals(this.additionalProperties, saleCreateTransaction201Response.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(guid, status, type, batchStatus, timeStamp, deviceGuid, amount, activated, tenderType, effectiveAmount, purchaseActivationDate, orderNumber, cardDataSource, customerID, batchGuid, connexPayTransaction, riskProcessingOnly, processorStatusCode, processorResponseMessage, wasProcessed, refNumber, customerReceipt, statementDescription, generatedBy, bankAccount, sequenceNumber, addressVerificationResult, cvvVerificationResult, walletProvider, includeRiskAnalysis, isFromIssueLite, remainingAmount, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleCreateTransaction201Response {\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    batchStatus: ").append(toIndentedString(batchStatus)).append("\n");
    sb.append("    timeStamp: ").append(toIndentedString(timeStamp)).append("\n");
    sb.append("    deviceGuid: ").append(toIndentedString(deviceGuid)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    activated: ").append(toIndentedString(activated)).append("\n");
    sb.append("    tenderType: ").append(toIndentedString(tenderType)).append("\n");
    sb.append("    effectiveAmount: ").append(toIndentedString(effectiveAmount)).append("\n");
    sb.append("    purchaseActivationDate: ").append(toIndentedString(purchaseActivationDate)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    cardDataSource: ").append(toIndentedString(cardDataSource)).append("\n");
    sb.append("    customerID: ").append(toIndentedString(customerID)).append("\n");
    sb.append("    batchGuid: ").append(toIndentedString(batchGuid)).append("\n");
    sb.append("    connexPayTransaction: ").append(toIndentedString(connexPayTransaction)).append("\n");
    sb.append("    riskProcessingOnly: ").append(toIndentedString(riskProcessingOnly)).append("\n");
    sb.append("    processorStatusCode: ").append(toIndentedString(processorStatusCode)).append("\n");
    sb.append("    processorResponseMessage: ").append(toIndentedString(processorResponseMessage)).append("\n");
    sb.append("    wasProcessed: ").append(toIndentedString(wasProcessed)).append("\n");
    sb.append("    refNumber: ").append(toIndentedString(refNumber)).append("\n");
    sb.append("    customerReceipt: ").append(toIndentedString(customerReceipt)).append("\n");
    sb.append("    statementDescription: ").append(toIndentedString(statementDescription)).append("\n");
    sb.append("    generatedBy: ").append(toIndentedString(generatedBy)).append("\n");
    sb.append("    bankAccount: ").append(toIndentedString(bankAccount)).append("\n");
    sb.append("    sequenceNumber: ").append(toIndentedString(sequenceNumber)).append("\n");
    sb.append("    addressVerificationResult: ").append(toIndentedString(addressVerificationResult)).append("\n");
    sb.append("    cvvVerificationResult: ").append(toIndentedString(cvvVerificationResult)).append("\n");
    sb.append("    walletProvider: ").append(toIndentedString(walletProvider)).append("\n");
    sb.append("    includeRiskAnalysis: ").append(toIndentedString(includeRiskAnalysis)).append("\n");
    sb.append("    isFromIssueLite: ").append(toIndentedString(isFromIssueLite)).append("\n");
    sb.append("    remainingAmount: ").append(toIndentedString(remainingAmount)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("guid");
    openapiFields.add("status");
    openapiFields.add("type");
    openapiFields.add("batchStatus");
    openapiFields.add("timeStamp");
    openapiFields.add("deviceGuid");
    openapiFields.add("amount");
    openapiFields.add("activated");
    openapiFields.add("tenderType");
    openapiFields.add("effectiveAmount");
    openapiFields.add("purchaseActivationDate");
    openapiFields.add("orderNumber");
    openapiFields.add("cardDataSource");
    openapiFields.add("customerID");
    openapiFields.add("batchGuid");
    openapiFields.add("connexPayTransaction");
    openapiFields.add("riskProcessingOnly");
    openapiFields.add("processorStatusCode");
    openapiFields.add("processorResponseMessage");
    openapiFields.add("wasProcessed");
    openapiFields.add("refNumber");
    openapiFields.add("customerReceipt");
    openapiFields.add("statementDescription");
    openapiFields.add("generatedBy");
    openapiFields.add("bankAccount");
    openapiFields.add("sequenceNumber");
    openapiFields.add("addressVerificationResult");
    openapiFields.add("cvvVerificationResult");
    openapiFields.add("walletProvider");
    openapiFields.add("includeRiskAnalysis");
    openapiFields.add("isFromIssueLite");
    openapiFields.add("remainingAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SaleCreateTransaction201Response
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SaleCreateTransaction201Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SaleCreateTransaction201Response is not found in the empty JSON string", SaleCreateTransaction201Response.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("batchStatus") != null && !jsonObj.get("batchStatus").isJsonNull()) && !jsonObj.get("batchStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `batchStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("batchStatus").toString()));
      }
      if ((jsonObj.get("timeStamp") != null && !jsonObj.get("timeStamp").isJsonNull()) && !jsonObj.get("timeStamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeStamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeStamp").toString()));
      }
      if ((jsonObj.get("deviceGuid") != null && !jsonObj.get("deviceGuid").isJsonNull()) && !jsonObj.get("deviceGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deviceGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceGuid").toString()));
      }
      if ((jsonObj.get("tenderType") != null && !jsonObj.get("tenderType").isJsonNull()) && !jsonObj.get("tenderType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenderType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenderType").toString()));
      }
      if ((jsonObj.get("purchaseActivationDate") != null && !jsonObj.get("purchaseActivationDate").isJsonNull()) && !jsonObj.get("purchaseActivationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseActivationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseActivationDate").toString()));
      }
      if ((jsonObj.get("orderNumber") != null && !jsonObj.get("orderNumber").isJsonNull()) && !jsonObj.get("orderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderNumber").toString()));
      }
      if ((jsonObj.get("cardDataSource") != null && !jsonObj.get("cardDataSource").isJsonNull()) && !jsonObj.get("cardDataSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardDataSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardDataSource").toString()));
      }
      if ((jsonObj.get("customerID") != null && !jsonObj.get("customerID").isJsonNull()) && !jsonObj.get("customerID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerID").toString()));
      }
      if ((jsonObj.get("batchGuid") != null && !jsonObj.get("batchGuid").isJsonNull()) && !jsonObj.get("batchGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `batchGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("batchGuid").toString()));
      }
      // validate the optional field `connexPayTransaction`
      if (jsonObj.get("connexPayTransaction") != null && !jsonObj.get("connexPayTransaction").isJsonNull()) {
        SaleCreateTransaction201ResponseConnexPayTransaction.validateJsonObject(jsonObj.getAsJsonObject("connexPayTransaction"));
      }
      if ((jsonObj.get("processorStatusCode") != null && !jsonObj.get("processorStatusCode").isJsonNull()) && !jsonObj.get("processorStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processorStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processorStatusCode").toString()));
      }
      if ((jsonObj.get("processorResponseMessage") != null && !jsonObj.get("processorResponseMessage").isJsonNull()) && !jsonObj.get("processorResponseMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processorResponseMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processorResponseMessage").toString()));
      }
      if ((jsonObj.get("refNumber") != null && !jsonObj.get("refNumber").isJsonNull()) && !jsonObj.get("refNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refNumber").toString()));
      }
      if ((jsonObj.get("customerReceipt") != null && !jsonObj.get("customerReceipt").isJsonNull()) && !jsonObj.get("customerReceipt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerReceipt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerReceipt").toString()));
      }
      if ((jsonObj.get("statementDescription") != null && !jsonObj.get("statementDescription").isJsonNull()) && !jsonObj.get("statementDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statementDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statementDescription").toString()));
      }
      if ((jsonObj.get("generatedBy") != null && !jsonObj.get("generatedBy").isJsonNull()) && !jsonObj.get("generatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generatedBy").toString()));
      }
      // validate the optional field `bankAccount`
      if (jsonObj.get("bankAccount") != null && !jsonObj.get("bankAccount").isJsonNull()) {
        SaleCreateTransaction201ResponseBankAccount.validateJsonObject(jsonObj.getAsJsonObject("bankAccount"));
      }
      if ((jsonObj.get("sequenceNumber") != null && !jsonObj.get("sequenceNumber").isJsonNull()) && !jsonObj.get("sequenceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sequenceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sequenceNumber").toString()));
      }
      if ((jsonObj.get("addressVerificationResult") != null && !jsonObj.get("addressVerificationResult").isJsonNull()) && !jsonObj.get("addressVerificationResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressVerificationResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressVerificationResult").toString()));
      }
      if ((jsonObj.get("cvvVerificationResult") != null && !jsonObj.get("cvvVerificationResult").isJsonNull()) && !jsonObj.get("cvvVerificationResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cvvVerificationResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cvvVerificationResult").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SaleCreateTransaction201Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SaleCreateTransaction201Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SaleCreateTransaction201Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SaleCreateTransaction201Response.class));

       return (TypeAdapter<T>) new TypeAdapter<SaleCreateTransaction201Response>() {
           @Override
           public void write(JsonWriter out, SaleCreateTransaction201Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SaleCreateTransaction201Response read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SaleCreateTransaction201Response instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SaleCreateTransaction201Response given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SaleCreateTransaction201Response
  * @throws IOException if the JSON string is invalid with respect to SaleCreateTransaction201Response
  */
  public static SaleCreateTransaction201Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SaleCreateTransaction201Response.class);
  }

 /**
  * Convert an instance of SaleCreateTransaction201Response to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

