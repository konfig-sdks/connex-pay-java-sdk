/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.LocalDate;
import com.konfigthis.client.model.ValidationSearchVerifyOperationRequest;
import com.konfigthis.client.model.ValidationSearchVerifyOperationResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ValidationApi
 */
@Disabled
public class ValidationApiTest {

    private static ValidationApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ValidationApi(apiClient);
    }

    /**
     * Search verify
     *
     * This endpoint search a verify.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchVerifyOperationTest() throws ApiException {
        String exportable = null;
        Integer pageNumber = null;
        String pageSize = null;
        String merchantGuid = null;
        String cardLastFour = null;
        String cardHolderName = null;
        String cardType = null;
        LocalDate timeStampFrom = null;
        LocalDate timeStampTo = null;
        String status = null;
        ValidationSearchVerifyOperationResponse response = api.searchVerifyOperation(exportable, pageNumber, pageSize)
                .merchantGuid(merchantGuid)
                .cardLastFour(cardLastFour)
                .cardHolderName(cardHolderName)
                .cardType(cardType)
                .timeStampFrom(timeStampFrom)
                .timeStampTo(timeStampTo)
                .status(status)
                .execute();
        // TODO: test validations
    }

}
