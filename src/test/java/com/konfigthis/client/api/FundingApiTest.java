/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.FundingMerchantCashBalanceRequest;
import com.konfigthis.client.model.FundingMerchantCashBalanceResponse;
import com.konfigthis.client.model.FundingTransferMerchantCashBalanceRequest;
import com.konfigthis.client.model.FundingTransferMerchantCashBalanceResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FundingApi
 */
@Disabled
public class FundingApiTest {

    private static FundingApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new FundingApi(apiClient);
    }

    /**
     * Client Self-Service Funding
     *
     * Use this endpoint to fund or withdraw your merchant cash balance with your merchant bank account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantCashBalanceTest() throws ApiException {
        String merchantGUID = null;
        Float amount = null;
        Boolean isFundCashBalance = null;
        FundingMerchantCashBalanceResponse response = api.merchantCashBalance(merchantGUID, amount, isFundCashBalance)
                .execute();
        // TODO: test validations
    }

    /**
     * Client Funds Transfer
     *
     * Use this endpoint to transfer funds between your merchant cash balances within the same Corporate entity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transferMerchantCashBalanceTest() throws ApiException {
        String transferredFrom = null;
        String transferredTo = null;
        Float amount = null;
        FundingTransferMerchantCashBalanceResponse response = api.transferMerchantCashBalance(transferredFrom, transferredTo, amount)
                .execute();
        // TODO: test validations
    }

}
