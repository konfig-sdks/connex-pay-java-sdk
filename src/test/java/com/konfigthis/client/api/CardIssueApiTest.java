/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CardIssuanceCreateVirtualCardRequestCustomParametersInner;
import com.konfigthis.client.model.CardIssueCreateVirtualCardLiteRequest;
import com.konfigthis.client.model.CardIssueCreateVirtualCardLiteRequestTransmission;
import java.time.LocalDate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CardIssueApi
 */
@Disabled
public class CardIssueApiTest {

    private static CardIssueApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CardIssueApi(apiClient);
    }

    /**
     * Issue Lite
     *
     * For our lite clients, we provide the ability to issue a VCC (Virtual Credit Card) via API without the requirement to process a sale first.  If you aren&#39;t sure which Issuance API to use, please contact your client support representative.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createVirtualCardLiteTest() throws ApiException {
        String merchantGuid = null;
        String firstName = null;
        String lastName = null;
        Float amountLimit = null;
        String purchaseType = null;
        String phone = null;
        String address1 = null;
        String address2 = null;
        String city = null;
        String state = null;
        String zipCode = null;
        String country = null;
        Long usageLimit = null;
        LocalDate expirationDate = null;
        LocalDate terminateDate = null;
        List<String> miDWhitelist = null;
        List<String> miDBlacklist = null;
        String sequenceNumber = null;
        String supplierId = null;
        Boolean nonDomesticSupplier = null;
        String orderNumber = null;
        String customerID = null;
        CardIssueCreateVirtualCardLiteRequestTransmission transmission = null;
        Boolean returnCardData = null;
        List<CardIssuanceCreateVirtualCardRequestCustomParametersInner> customParameters = null;
        LocalDate activationDate = null;
        String associationId = null;
        List<String> labelIDs = null;
        String response = api.createVirtualCardLite(merchantGuid, firstName, lastName, amountLimit, purchaseType)
                .phone(phone)
                .address1(address1)
                .address2(address2)
                .city(city)
                .state(state)
                .zipCode(zipCode)
                .country(country)
                .usageLimit(usageLimit)
                .expirationDate(expirationDate)
                .terminateDate(terminateDate)
                .miDWhitelist(miDWhitelist)
                .miDBlacklist(miDBlacklist)
                .sequenceNumber(sequenceNumber)
                .supplierId(supplierId)
                .nonDomesticSupplier(nonDomesticSupplier)
                .orderNumber(orderNumber)
                .customerID(customerID)
                .transmission(transmission)
                .returnCardData(returnCardData)
                .customParameters(customParameters)
                .activationDate(activationDate)
                .associationId(associationId)
                .labelIDs(labelIDs)
                .execute();
        // TODO: test validations
    }

}
