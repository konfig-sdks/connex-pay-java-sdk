/*
 * ConnexPay Reporting API
 * REST API for retrieving reporting data. Currently Daily Accounting data only.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.LocalDate;
import com.konfigthis.client.model.SettlementSearchVirtualCardSettlementsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SettlementApi
 */
@Disabled
public class SettlementApiTest {

    private static SettlementApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SettlementApi(apiClient);
    }

    /**
     * Search Settlements
     *
     * This endpoint searches for Virtual Card Settlements.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchVirtualCardSettlementsTest() throws ApiException {
        String merchantGuid = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        LocalDate dateFrom = null;
        LocalDate dateTo = null;
        LocalDate postedDateFrom = null;
        LocalDate postedDateTo = null;
        String orderNumber = null;
        Long issuedAmountFrom = null;
        Long issuedAmountTo = null;
        String issuedCardLastFour = null;
        Float postedAmountFrom = null;
        Float postedAmountTo = null;
        LocalDate expirationDateFrom = null;
        LocalDate expirationDateTo = null;
        Object response = api.searchVirtualCardSettlements(merchantGuid, pageNumber, pageSize)
                .dateFrom(dateFrom)
                .dateTo(dateTo)
                .postedDateFrom(postedDateFrom)
                .postedDateTo(postedDateTo)
                .orderNumber(orderNumber)
                .issuedAmountFrom(issuedAmountFrom)
                .issuedAmountTo(issuedAmountTo)
                .issuedCardLastFour(issuedCardLastFour)
                .postedAmountFrom(postedAmountFrom)
                .postedAmountTo(postedAmountTo)
                .expirationDateFrom(expirationDateFrom)
                .expirationDateTo(expirationDateTo)
                .execute();
        // TODO: test validations
    }

}
